Search.setIndex({"docnames": ["api", "api/compas_tno", "api/compas_tno.algorithms", "api/compas_tno.analysis", "api/compas_tno.optimisers", "api/compas_tno.problems", "api/compas_tno.solvers", "api/compas_tno.utilities", "api/generated/compas_tno.algorithms.check_horizontal_loads", "api/generated/compas_tno.algorithms.check_independents", "api/generated/compas_tno.algorithms.compute_reactions", "api/generated/compas_tno.algorithms.equilibrium_fdm", "api/generated/compas_tno.algorithms.equilibrium_residual", "api/generated/compas_tno.algorithms.find_independents", "api/generated/compas_tno.algorithms.find_independents_QR", "api/generated/compas_tno.algorithms.find_independents_backward", "api/generated/compas_tno.algorithms.find_independents_forward", "api/generated/compas_tno.algorithms.independents_exclude", "api/generated/compas_tno.algorithms.independents_include", "api/generated/compas_tno.algorithms.inds_incl_excl", "api/generated/compas_tno.algorithms.q_from_qid", "api/generated/compas_tno.algorithms.q_from_variables", "api/generated/compas_tno.algorithms.vertical_equilibrium_fdm", "api/generated/compas_tno.algorithms.weights_from_xyz", "api/generated/compas_tno.algorithms.weights_from_xyz_dict", "api/generated/compas_tno.algorithms.xyz_from_q", "api/generated/compas_tno.algorithms.xyz_from_xopt", "api/generated/compas_tno.analysis.Analysis", "api/generated/compas_tno.analysis.Analysis.ToString", "api/generated/compas_tno.analysis.Analysis.apply_cracks", "api/generated/compas_tno.analysis.Analysis.apply_envelope", "api/generated/compas_tno.analysis.Analysis.apply_envelope_on_xy", "api/generated/compas_tno.analysis.Analysis.apply_hor_multiplier", "api/generated/compas_tno.analysis.Analysis.apply_reaction_bounds", "api/generated/compas_tno.analysis.Analysis.apply_selfweight", "api/generated/compas_tno.analysis.Analysis.apply_target", "api/generated/compas_tno.analysis.Analysis.clear_previous_results", "api/generated/compas_tno.analysis.Analysis.copy", "api/generated/compas_tno.analysis.Analysis.create_bestfit_analysis", "api/generated/compas_tno.analysis.Analysis.create_compl_energy_analysis", "api/generated/compas_tno.analysis.Analysis.create_lp_analysis", "api/generated/compas_tno.analysis.Analysis.create_max_load_analysis", "api/generated/compas_tno.analysis.Analysis.create_maxthrust_analysis", "api/generated/compas_tno.analysis.Analysis.create_minthk_analysis", "api/generated/compas_tno.analysis.Analysis.create_minthrust_analysis", "api/generated/compas_tno.analysis.Analysis.create_quad_compl_energy_analysis", "api/generated/compas_tno.analysis.Analysis.from_json", "api/generated/compas_tno.analysis.Analysis.from_jsonstring", "api/generated/compas_tno.analysis.Analysis.is_convex", "api/generated/compas_tno.analysis.Analysis.run", "api/generated/compas_tno.analysis.Analysis.set_optimiser_options", "api/generated/compas_tno.analysis.Analysis.set_up_optimiser", "api/generated/compas_tno.analysis.Analysis.sha256", "api/generated/compas_tno.analysis.Analysis.to_json", "api/generated/compas_tno.analysis.Analysis.to_jsonstring", "api/generated/compas_tno.analysis.Analysis.validate_data", "api/generated/compas_tno.optimisers.Optimiser", "api/generated/compas_tno.optimisers.Optimiser.ToString", "api/generated/compas_tno.optimisers.Optimiser.clear_optimiser", "api/generated/compas_tno.optimisers.Optimiser.copy", "api/generated/compas_tno.optimisers.Optimiser.create_bestfit_optimiser", "api/generated/compas_tno.optimisers.Optimiser.create_compl_energy_optimiser", "api/generated/compas_tno.optimisers.Optimiser.create_lp_optimiser", "api/generated/compas_tno.optimisers.Optimiser.create_max_horload_optimiser", "api/generated/compas_tno.optimisers.Optimiser.create_max_vertload_optimiser", "api/generated/compas_tno.optimisers.Optimiser.create_maxthrust_optimiser", "api/generated/compas_tno.optimisers.Optimiser.create_minthk_optimiser", "api/generated/compas_tno.optimisers.Optimiser.create_minthrust_optimiser", "api/generated/compas_tno.optimisers.Optimiser.create_quad_compl_energy_optimiser", "api/generated/compas_tno.optimisers.Optimiser.from_json", "api/generated/compas_tno.optimisers.Optimiser.from_jsonstring", "api/generated/compas_tno.optimisers.Optimiser.set_axis_symmetry", "api/generated/compas_tno.optimisers.Optimiser.set_constraints", "api/generated/compas_tno.optimisers.Optimiser.set_display_options", "api/generated/compas_tno.optimisers.Optimiser.set_features", "api/generated/compas_tno.optimisers.Optimiser.set_gradient_options", "api/generated/compas_tno.optimisers.Optimiser.set_max_iterations", "api/generated/compas_tno.optimisers.Optimiser.set_objective", "api/generated/compas_tno.optimisers.Optimiser.set_optimiser_options", "api/generated/compas_tno.optimisers.Optimiser.set_solver", "api/generated/compas_tno.optimisers.Optimiser.set_starting_point", "api/generated/compas_tno.optimisers.Optimiser.set_variables", "api/generated/compas_tno.optimisers.Optimiser.sha256", "api/generated/compas_tno.optimisers.Optimiser.to_json", "api/generated/compas_tno.optimisers.Optimiser.to_jsonstring", "api/generated/compas_tno.optimisers.Optimiser.validate_data", "api/generated/compas_tno.problems.Problem", "api/generated/compas_tno.problems.adapt_problem_to_fixed_diagram", "api/generated/compas_tno.problems.adapt_problem_to_sym_and_fixed_diagram", "api/generated/compas_tno.problems.adapt_problem_to_sym_diagram", "api/generated/compas_tno.problems.apply_sym_to_form", "api/generated/compas_tno.problems.b_update", "api/generated/compas_tno.problems.callback_create_json", "api/generated/compas_tno.problems.callback_save_json", "api/generated/compas_tno.problems.compute_dQ", "api/generated/compas_tno.problems.constr_wrapper", "api/generated/compas_tno.problems.d_fconstr", "api/generated/compas_tno.problems.d_fobj", "api/generated/compas_tno.problems.db_update", "api/generated/compas_tno.problems.dub_dlb_update", "api/generated/compas_tno.problems.f_bestfit", "api/generated/compas_tno.problems.f_complementary_energy", "api/generated/compas_tno.problems.f_complementary_energy_nonlinear", "api/generated/compas_tno.problems.f_constant", "api/generated/compas_tno.problems.f_horprojection", "api/generated/compas_tno.problems.f_loadpath_general", "api/generated/compas_tno.problems.f_max_section", "api/generated/compas_tno.problems.f_max_thrust", "api/generated/compas_tno.problems.f_min_thrust", "api/generated/compas_tno.problems.f_reduce_thk", "api/generated/compas_tno.problems.f_tight_crosssection", "api/generated/compas_tno.problems.gradient_bestfit", "api/generated/compas_tno.problems.gradient_complementary_energy", "api/generated/compas_tno.problems.gradient_complementary_energy_nonlinear", "api/generated/compas_tno.problems.gradient_feasibility", "api/generated/compas_tno.problems.gradient_fmax", "api/generated/compas_tno.problems.gradient_fmin", "api/generated/compas_tno.problems.gradient_horprojection", "api/generated/compas_tno.problems.gradient_loadpath", "api/generated/compas_tno.problems.gradient_max_section", "api/generated/compas_tno.problems.gradient_reduce_thk", "api/generated/compas_tno.problems.gradient_tight_crosssection", "api/generated/compas_tno.problems.initialise_form", "api/generated/compas_tno.problems.initialise_problem_general", "api/generated/compas_tno.problems.objective_selector", "api/generated/compas_tno.problems.save_geometry_at_iterations", "api/generated/compas_tno.problems.sensitivities_wrapper", "api/generated/compas_tno.problems.set_up_convex_optimisation", "api/generated/compas_tno.problems.set_up_general_optimisation", "api/generated/compas_tno.problems.startingpoint_fdm", "api/generated/compas_tno.problems.startingpoint_loadpath", "api/generated/compas_tno.problems.startingpoint_sag", "api/generated/compas_tno.problems.startingpoint_tna", "api/generated/compas_tno.problems.ub_lb_update", "api/generated/compas_tno.solvers.call_and_output_CVXPY", "api/generated/compas_tno.solvers.post_process_nlopt", "api/generated/compas_tno.solvers.run_convex_optimisation", "api/generated/compas_tno.solvers.run_loadpath_from_form_CVXPY", "api/generated/compas_tno.solvers.run_nlopt_ipopt", "api/generated/compas_tno.solvers.run_nlopt_scipy", "api/generated/compas_tno.utilities.apply_radial_symmetry", "api/generated/compas_tno.utilities.apply_symmetry_from_axis", "api/generated/compas_tno.utilities.assign_cracks", "api/generated/compas_tno.utilities.build_symmetry_matrix", "api/generated/compas_tno.utilities.build_symmetry_matrix_supports", "api/generated/compas_tno.utilities.build_symmetry_transformation", "api/generated/compas_tno.utilities.build_vertex_symmetry_transformation", "api/generated/compas_tno.utilities.check_envelope_constraints", "api/generated/compas_tno.utilities.compute_average_edge_stiffness", "api/generated/compas_tno.utilities.compute_edge_stiffness", "api/generated/compas_tno.utilities.compute_form_initial_lengths", "api/generated/compas_tno.utilities.create_mesh_from_topology_and_basemesh", "api/generated/compas_tno.utilities.create_mesh_from_topology_and_pointcloud", "api/generated/compas_tno.utilities.displacement_map_4parabolas", "api/generated/compas_tno.utilities.displacement_map_parabola", "api/generated/compas_tno.utilities.displacement_map_paraboloid", "api/generated/compas_tno.utilities.distance_target", "api/generated/compas_tno.utilities.find_sym_axis_in_rect_patterns", "api/generated/compas_tno.utilities.fix_mesh_boundary", "api/generated/compas_tno.utilities.fix_mesh_corners", "api/generated/compas_tno.utilities.form_add_lines_support", "api/generated/compas_tno.utilities.form_parabolic_slide", "api/generated/compas_tno.utilities.interpolate_from_pointcloud", "api/generated/compas_tno.utilities.mesh_from_pointcloud", "api/generated/compas_tno.utilities.mesh_remove_two_valent_nodes", "api/generated/compas_tno.utilities.move_pattern_inwards", "api/generated/compas_tno.utilities.move_pattern_outwards", "api/generated/compas_tno.utilities.move_pattern_to_origin", "api/generated/compas_tno.utilities.rectangular_smoothing_constraints", "api/generated/compas_tno.utilities.rollers_on_openings", "api/generated/compas_tno.utilities.set_b_constraint", "api/generated/compas_tno.utilities.set_rollers_constraint", "api/generated/compas_tno.utilities.shuffle_diagram", "api/generated/compas_tno.utilities.slide_diagram", "api/generated/compas_tno.utilities.slide_pattern_inwards", "api/generated/compas_tno.utilities.split_intersection_lines", "api/generated/compas_tno.utilities.store_inds", "examples", "examples/1_crossvault_minmax", "examples/2_crossvault_fan", "examples/3_dome_minthrust", "examples/4_crossvault_minthk", "examples/5_crossvault_settlement", "examples/6_cross_maxload", "gettingstarted", "gettingstarted/solvers", "index", "installation", "license", "publications", "tutorial", "tutorial/0_workflow", "tutorial/1_form", "tutorial/2_envelope", "tutorial/3_optimiser", "tutorial/4_analysis"], "filenames": ["api.rst", "api/compas_tno.rst", "api/compas_tno.algorithms.rst", "api/compas_tno.analysis.rst", "api/compas_tno.optimisers.rst", "api/compas_tno.problems.rst", "api/compas_tno.solvers.rst", "api/compas_tno.utilities.rst", "api/generated/compas_tno.algorithms.check_horizontal_loads.rst", "api/generated/compas_tno.algorithms.check_independents.rst", "api/generated/compas_tno.algorithms.compute_reactions.rst", "api/generated/compas_tno.algorithms.equilibrium_fdm.rst", "api/generated/compas_tno.algorithms.equilibrium_residual.rst", "api/generated/compas_tno.algorithms.find_independents.rst", "api/generated/compas_tno.algorithms.find_independents_QR.rst", "api/generated/compas_tno.algorithms.find_independents_backward.rst", "api/generated/compas_tno.algorithms.find_independents_forward.rst", "api/generated/compas_tno.algorithms.independents_exclude.rst", "api/generated/compas_tno.algorithms.independents_include.rst", "api/generated/compas_tno.algorithms.inds_incl_excl.rst", "api/generated/compas_tno.algorithms.q_from_qid.rst", "api/generated/compas_tno.algorithms.q_from_variables.rst", "api/generated/compas_tno.algorithms.vertical_equilibrium_fdm.rst", "api/generated/compas_tno.algorithms.weights_from_xyz.rst", "api/generated/compas_tno.algorithms.weights_from_xyz_dict.rst", "api/generated/compas_tno.algorithms.xyz_from_q.rst", "api/generated/compas_tno.algorithms.xyz_from_xopt.rst", "api/generated/compas_tno.analysis.Analysis.rst", "api/generated/compas_tno.analysis.Analysis.ToString.rst", "api/generated/compas_tno.analysis.Analysis.apply_cracks.rst", "api/generated/compas_tno.analysis.Analysis.apply_envelope.rst", "api/generated/compas_tno.analysis.Analysis.apply_envelope_on_xy.rst", "api/generated/compas_tno.analysis.Analysis.apply_hor_multiplier.rst", "api/generated/compas_tno.analysis.Analysis.apply_reaction_bounds.rst", "api/generated/compas_tno.analysis.Analysis.apply_selfweight.rst", "api/generated/compas_tno.analysis.Analysis.apply_target.rst", "api/generated/compas_tno.analysis.Analysis.clear_previous_results.rst", "api/generated/compas_tno.analysis.Analysis.copy.rst", "api/generated/compas_tno.analysis.Analysis.create_bestfit_analysis.rst", "api/generated/compas_tno.analysis.Analysis.create_compl_energy_analysis.rst", "api/generated/compas_tno.analysis.Analysis.create_lp_analysis.rst", "api/generated/compas_tno.analysis.Analysis.create_max_load_analysis.rst", "api/generated/compas_tno.analysis.Analysis.create_maxthrust_analysis.rst", "api/generated/compas_tno.analysis.Analysis.create_minthk_analysis.rst", "api/generated/compas_tno.analysis.Analysis.create_minthrust_analysis.rst", "api/generated/compas_tno.analysis.Analysis.create_quad_compl_energy_analysis.rst", "api/generated/compas_tno.analysis.Analysis.from_json.rst", "api/generated/compas_tno.analysis.Analysis.from_jsonstring.rst", "api/generated/compas_tno.analysis.Analysis.is_convex.rst", "api/generated/compas_tno.analysis.Analysis.run.rst", "api/generated/compas_tno.analysis.Analysis.set_optimiser_options.rst", "api/generated/compas_tno.analysis.Analysis.set_up_optimiser.rst", "api/generated/compas_tno.analysis.Analysis.sha256.rst", "api/generated/compas_tno.analysis.Analysis.to_json.rst", "api/generated/compas_tno.analysis.Analysis.to_jsonstring.rst", "api/generated/compas_tno.analysis.Analysis.validate_data.rst", "api/generated/compas_tno.optimisers.Optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.ToString.rst", "api/generated/compas_tno.optimisers.Optimiser.clear_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.copy.rst", "api/generated/compas_tno.optimisers.Optimiser.create_bestfit_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.create_compl_energy_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.create_lp_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.create_max_horload_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.create_max_vertload_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.create_maxthrust_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.create_minthk_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.create_minthrust_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.create_quad_compl_energy_optimiser.rst", "api/generated/compas_tno.optimisers.Optimiser.from_json.rst", "api/generated/compas_tno.optimisers.Optimiser.from_jsonstring.rst", "api/generated/compas_tno.optimisers.Optimiser.set_axis_symmetry.rst", "api/generated/compas_tno.optimisers.Optimiser.set_constraints.rst", "api/generated/compas_tno.optimisers.Optimiser.set_display_options.rst", "api/generated/compas_tno.optimisers.Optimiser.set_features.rst", "api/generated/compas_tno.optimisers.Optimiser.set_gradient_options.rst", "api/generated/compas_tno.optimisers.Optimiser.set_max_iterations.rst", "api/generated/compas_tno.optimisers.Optimiser.set_objective.rst", "api/generated/compas_tno.optimisers.Optimiser.set_optimiser_options.rst", "api/generated/compas_tno.optimisers.Optimiser.set_solver.rst", "api/generated/compas_tno.optimisers.Optimiser.set_starting_point.rst", "api/generated/compas_tno.optimisers.Optimiser.set_variables.rst", "api/generated/compas_tno.optimisers.Optimiser.sha256.rst", "api/generated/compas_tno.optimisers.Optimiser.to_json.rst", "api/generated/compas_tno.optimisers.Optimiser.to_jsonstring.rst", "api/generated/compas_tno.optimisers.Optimiser.validate_data.rst", "api/generated/compas_tno.problems.Problem.rst", "api/generated/compas_tno.problems.adapt_problem_to_fixed_diagram.rst", "api/generated/compas_tno.problems.adapt_problem_to_sym_and_fixed_diagram.rst", "api/generated/compas_tno.problems.adapt_problem_to_sym_diagram.rst", "api/generated/compas_tno.problems.apply_sym_to_form.rst", "api/generated/compas_tno.problems.b_update.rst", "api/generated/compas_tno.problems.callback_create_json.rst", "api/generated/compas_tno.problems.callback_save_json.rst", "api/generated/compas_tno.problems.compute_dQ.rst", "api/generated/compas_tno.problems.constr_wrapper.rst", "api/generated/compas_tno.problems.d_fconstr.rst", "api/generated/compas_tno.problems.d_fobj.rst", "api/generated/compas_tno.problems.db_update.rst", "api/generated/compas_tno.problems.dub_dlb_update.rst", "api/generated/compas_tno.problems.f_bestfit.rst", "api/generated/compas_tno.problems.f_complementary_energy.rst", "api/generated/compas_tno.problems.f_complementary_energy_nonlinear.rst", "api/generated/compas_tno.problems.f_constant.rst", "api/generated/compas_tno.problems.f_horprojection.rst", "api/generated/compas_tno.problems.f_loadpath_general.rst", "api/generated/compas_tno.problems.f_max_section.rst", "api/generated/compas_tno.problems.f_max_thrust.rst", "api/generated/compas_tno.problems.f_min_thrust.rst", "api/generated/compas_tno.problems.f_reduce_thk.rst", "api/generated/compas_tno.problems.f_tight_crosssection.rst", "api/generated/compas_tno.problems.gradient_bestfit.rst", "api/generated/compas_tno.problems.gradient_complementary_energy.rst", "api/generated/compas_tno.problems.gradient_complementary_energy_nonlinear.rst", "api/generated/compas_tno.problems.gradient_feasibility.rst", "api/generated/compas_tno.problems.gradient_fmax.rst", "api/generated/compas_tno.problems.gradient_fmin.rst", "api/generated/compas_tno.problems.gradient_horprojection.rst", "api/generated/compas_tno.problems.gradient_loadpath.rst", "api/generated/compas_tno.problems.gradient_max_section.rst", "api/generated/compas_tno.problems.gradient_reduce_thk.rst", "api/generated/compas_tno.problems.gradient_tight_crosssection.rst", "api/generated/compas_tno.problems.initialise_form.rst", "api/generated/compas_tno.problems.initialise_problem_general.rst", "api/generated/compas_tno.problems.objective_selector.rst", "api/generated/compas_tno.problems.save_geometry_at_iterations.rst", "api/generated/compas_tno.problems.sensitivities_wrapper.rst", "api/generated/compas_tno.problems.set_up_convex_optimisation.rst", "api/generated/compas_tno.problems.set_up_general_optimisation.rst", "api/generated/compas_tno.problems.startingpoint_fdm.rst", "api/generated/compas_tno.problems.startingpoint_loadpath.rst", "api/generated/compas_tno.problems.startingpoint_sag.rst", "api/generated/compas_tno.problems.startingpoint_tna.rst", "api/generated/compas_tno.problems.ub_lb_update.rst", "api/generated/compas_tno.solvers.call_and_output_CVXPY.rst", "api/generated/compas_tno.solvers.post_process_nlopt.rst", "api/generated/compas_tno.solvers.run_convex_optimisation.rst", "api/generated/compas_tno.solvers.run_loadpath_from_form_CVXPY.rst", "api/generated/compas_tno.solvers.run_nlopt_ipopt.rst", "api/generated/compas_tno.solvers.run_nlopt_scipy.rst", "api/generated/compas_tno.utilities.apply_radial_symmetry.rst", "api/generated/compas_tno.utilities.apply_symmetry_from_axis.rst", "api/generated/compas_tno.utilities.assign_cracks.rst", "api/generated/compas_tno.utilities.build_symmetry_matrix.rst", "api/generated/compas_tno.utilities.build_symmetry_matrix_supports.rst", "api/generated/compas_tno.utilities.build_symmetry_transformation.rst", "api/generated/compas_tno.utilities.build_vertex_symmetry_transformation.rst", "api/generated/compas_tno.utilities.check_envelope_constraints.rst", "api/generated/compas_tno.utilities.compute_average_edge_stiffness.rst", "api/generated/compas_tno.utilities.compute_edge_stiffness.rst", "api/generated/compas_tno.utilities.compute_form_initial_lengths.rst", "api/generated/compas_tno.utilities.create_mesh_from_topology_and_basemesh.rst", "api/generated/compas_tno.utilities.create_mesh_from_topology_and_pointcloud.rst", "api/generated/compas_tno.utilities.displacement_map_4parabolas.rst", "api/generated/compas_tno.utilities.displacement_map_parabola.rst", "api/generated/compas_tno.utilities.displacement_map_paraboloid.rst", "api/generated/compas_tno.utilities.distance_target.rst", "api/generated/compas_tno.utilities.find_sym_axis_in_rect_patterns.rst", "api/generated/compas_tno.utilities.fix_mesh_boundary.rst", "api/generated/compas_tno.utilities.fix_mesh_corners.rst", "api/generated/compas_tno.utilities.form_add_lines_support.rst", "api/generated/compas_tno.utilities.form_parabolic_slide.rst", "api/generated/compas_tno.utilities.interpolate_from_pointcloud.rst", "api/generated/compas_tno.utilities.mesh_from_pointcloud.rst", "api/generated/compas_tno.utilities.mesh_remove_two_valent_nodes.rst", "api/generated/compas_tno.utilities.move_pattern_inwards.rst", "api/generated/compas_tno.utilities.move_pattern_outwards.rst", "api/generated/compas_tno.utilities.move_pattern_to_origin.rst", "api/generated/compas_tno.utilities.rectangular_smoothing_constraints.rst", "api/generated/compas_tno.utilities.rollers_on_openings.rst", "api/generated/compas_tno.utilities.set_b_constraint.rst", "api/generated/compas_tno.utilities.set_rollers_constraint.rst", "api/generated/compas_tno.utilities.shuffle_diagram.rst", "api/generated/compas_tno.utilities.slide_diagram.rst", "api/generated/compas_tno.utilities.slide_pattern_inwards.rst", "api/generated/compas_tno.utilities.split_intersection_lines.rst", "api/generated/compas_tno.utilities.store_inds.rst", "examples.rst", "examples/1_crossvault_minmax.rst", "examples/2_crossvault_fan.rst", "examples/3_dome_minthrust.rst", "examples/4_crossvault_minthk.rst", "examples/5_crossvault_settlement.rst", "examples/6_cross_maxload.rst", "gettingstarted.rst", "gettingstarted/solvers.rst", "index.rst", "installation.rst", "license.rst", "publications.rst", "tutorial.rst", "tutorial/0_workflow.rst", "tutorial/1_form.rst", "tutorial/2_envelope.rst", "tutorial/3_optimiser.rst", "tutorial/4_analysis.rst"], "titles": ["API Reference", "compas_tno", "compas_tno.algorithms", "compas_tno.analysis", "compas_tno.optimisers", "compas_tno.problems", "compas_tno.solvers", "compas_tno.utilities", "check_horizontal_loads", "check_independents", "compute_reactions", "equilibrium_fdm", "equilibrium_residual", "find_independents", "find_independents_QR", "find_independents_backward", "find_independents_forward", "independents_exclude", "independents_include", "inds_incl_excl", "q_from_qid", "q_from_variables", "vertical_equilibrium_fdm", "weights_from_xyz", "weights_from_xyz_dict", "xyz_from_q", "xyz_from_xopt", "Analysis", "Analysis.ToString", "Analysis.apply_cracks", "Analysis.apply_envelope", "Analysis.apply_envelope_on_xy", "Analysis.apply_hor_multiplier", "Analysis.apply_reaction_bounds", "Analysis.apply_selfweight", "Analysis.apply_target", "Analysis.clear_previous_results", "Analysis.copy", "Analysis.create_bestfit_analysis", "Analysis.create_compl_energy_analysis", "Analysis.create_lp_analysis", "Analysis.create_max_load_analysis", "Analysis.create_maxthrust_analysis", "Analysis.create_minthk_analysis", "Analysis.create_minthrust_analysis", "Analysis.create_quad_compl_energy_analysis", "Analysis.from_json", "Analysis.from_jsonstring", "Analysis.is_convex", "Analysis.run", "Analysis.set_optimiser_options", "Analysis.set_up_optimiser", "Analysis.sha256", "Analysis.to_json", "Analysis.to_jsonstring", "Analysis.validate_data", "Optimiser", "Optimiser.ToString", "Optimiser.clear_optimiser", "Optimiser.copy", "Optimiser.create_bestfit_optimiser", "Optimiser.create_compl_energy_optimiser", "Optimiser.create_lp_optimiser", "Optimiser.create_max_horload_optimiser", "Optimiser.create_max_vertload_optimiser", "Optimiser.create_maxthrust_optimiser", "Optimiser.create_minthk_optimiser", "Optimiser.create_minthrust_optimiser", "Optimiser.create_quad_compl_energy_optimiser", "Optimiser.from_json", "Optimiser.from_jsonstring", "Optimiser.set_axis_symmetry", "Optimiser.set_constraints", "Optimiser.set_display_options", "Optimiser.set_features", "Optimiser.set_gradient_options", "Optimiser.set_max_iterations", "Optimiser.set_objective", "Optimiser.set_optimiser_options", "Optimiser.set_solver", "Optimiser.set_starting_point", "Optimiser.set_variables", "Optimiser.sha256", "Optimiser.to_json", "Optimiser.to_jsonstring", "Optimiser.validate_data", "Problem", "adapt_problem_to_fixed_diagram", "adapt_problem_to_sym_and_fixed_diagram", "adapt_problem_to_sym_diagram", "apply_sym_to_form", "b_update", "callback_create_json", "callback_save_json", "compute_dQ", "constr_wrapper", "d_fconstr", "d_fobj", "db_update", "dub_dlb_update", "f_bestfit", "f_complementary_energy", "f_complementary_energy_nonlinear", "f_constant", "f_horprojection", "f_loadpath_general", "f_max_section", "f_max_thrust", "f_min_thrust", "f_reduce_thk", "f_tight_crosssection", "gradient_bestfit", "gradient_complementary_energy", "gradient_complementary_energy_nonlinear", "gradient_feasibility", "gradient_fmax", "gradient_fmin", "gradient_horprojection", "gradient_loadpath", "gradient_max_section", "gradient_reduce_thk", "gradient_tight_crosssection", "initialise_form", "initialise_problem_general", "objective_selector", "save_geometry_at_iterations", "sensitivities_wrapper", "set_up_convex_optimisation", "set_up_general_optimisation", "startingpoint_fdm", "startingpoint_loadpath", "startingpoint_sag", "startingpoint_tna", "ub_lb_update", "call_and_output_CVXPY", "post_process_nlopt", "run_convex_optimisation", "run_loadpath_from_form_CVXPY", "run_nlopt_ipopt", "run_nlopt_scipy", "apply_radial_symmetry", "apply_symmetry_from_axis", "assign_cracks", "build_symmetry_matrix", "build_symmetry_matrix_supports", "build_symmetry_transformation", "build_vertex_symmetry_transformation", "check_envelope_constraints", "compute_average_edge_stiffness", "compute_edge_stiffness", "compute_form_initial_lengths", "create_mesh_from_topology_and_basemesh", "create_mesh_from_topology_and_pointcloud", "displacement_map_4parabolas", "displacement_map_parabola", "displacement_map_paraboloid", "distance_target", "find_sym_axis_in_rect_patterns", "fix_mesh_boundary", "fix_mesh_corners", "form_add_lines_support", "form_parabolic_slide", "interpolate_from_pointcloud", "mesh_from_pointcloud", "mesh_remove_two_valent_nodes", "move_pattern_inwards", "move_pattern_outwards", "move_pattern_to_origin", "rectangular_smoothing_constraints", "rollers_on_openings", "set_b_constraint", "set_rollers_constraint", "shuffle_diagram", "slide_diagram", "slide_pattern_inwards", "split_intersection_lines", "store_inds", "Examples", "Cross vault min/max thrust", "Cross vault new diagram", "Dome minimum thrust", "CrossVault min thickness", "CrossVault subjected to settlement", "Cross vault collapse load", "Getting Started", "Solvers", "Introduction", "Installation", "License", "Publications", "Tutorial", "Workflow", "FormDiagram", "Envelope", "Optimiser", "Analysis"], "terms": {"compas_tno": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 56, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 186, 195], "algorithm": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 52, 82, 186], "analysi": [0, 1, 11, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 122, 123, 127, 128, 134, 135, 136, 137, 138, 139, 178, 179, 180, 181, 182, 183, 186, 189, 190, 191, 192, 194], "optimis": [0, 1, 9, 25, 26, 27, 36, 49, 50, 51, 86, 92, 93, 124, 125, 127, 128, 130, 134, 135, 136, 137, 138, 139, 183, 185, 186, 189, 190, 191, 195], "problem": [0, 1, 9, 12, 26, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 56, 62, 72, 74, 76, 77, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 153, 154, 155, 172, 173, 177, 182, 183, 185, 186, 190, 192, 194, 195], "solver": [0, 1, 20, 38, 39, 40, 41, 42, 43, 44, 45, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 79, 125, 130, 132, 134, 135, 136, 137, 138, 139, 181, 184, 186, 187, 190], "util": [0, 1, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 186], "e": [8, 13, 14, 15, 16, 17, 18, 19, 20, 86, 148, 149, 195], "p": [8, 14, 20, 86, 182, 189, 192], "run": [8, 9, 136, 137, 138, 139, 178, 179, 180, 181, 182, 183, 185, 186, 191, 195], "check": [8, 9, 15, 21, 48, 122, 147, 156, 168, 186, 189, 192, 193, 194, 195], "verifi": [8, 9, 147], "certain": [8, 17, 18, 19], "horizont": [8, 20, 32, 41, 63, 86, 104, 107, 108, 117, 186, 194], "distribut": [8, 186, 188], "can": [8, 11, 55, 85, 86, 124, 185, 186, 187, 189, 192, 193, 194, 195], "taken": 8, "fix": [8, 25, 28, 56, 57, 86, 87, 88, 91, 98, 122, 130, 158, 159, 167, 182, 192, 194], "form": [8, 10, 11, 14, 22, 27, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 62, 87, 88, 89, 90, 104, 117, 122, 123, 125, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 190, 191, 192, 195], "diagram": [8, 10, 11, 14, 22, 27, 32, 34, 87, 88, 89, 90, 104, 117, 122, 123, 125, 129, 130, 131, 132, 134, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 186, 191, 194, 195], "paramet": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 190, 192], "arrai": [8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 39, 56, 61, 63, 64, 68, 86, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 133, 143, 144, 145, 146, 149, 150, 153, 154, 155, 170, 171, 182], "equilibrium": [8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 86, 94, 122, 129, 131, 132, 186, 189, 194], "matrix": [8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 86, 94, 96, 126, 143, 144, 145, 146], "vector": [8, 20, 21, 39, 61, 68, 86, 95, 110, 114, 124, 134, 150, 182, 183], "load": [8, 11, 20, 23, 24, 32, 41, 63, 64, 86, 88, 89, 90, 129, 131, 132, 140, 141, 160, 177, 186, 193], "return": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 194], "bool": [8, 9, 10, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 75, 82, 83, 84, 87, 88, 89, 90, 122, 125, 130, 132, 134, 137, 140, 141, 143, 144, 145, 146, 152, 167, 170, 171], "true": [8, 9, 10, 34, 37, 38, 41, 43, 52, 53, 54, 56, 59, 60, 63, 64, 66, 73, 75, 82, 83, 84, 88, 89, 90, 122, 140, 141, 143, 144, 145, 146, 164, 167, 178, 179, 180, 181, 182, 183], "independ": [8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 59, 86, 87, 88, 94, 122, 130, 137, 176, 194], "ar": [8, 9, 15, 23, 24, 28, 56, 57, 63, 64, 66, 86, 126, 130, 132, 134, 137, 143, 144, 145, 146, 147, 149, 167, 170, 171, 177, 185, 186, 189, 190, 191, 192, 194, 195], "m": [9, 12, 14, 20, 21, 25, 26, 56, 86, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 143, 145, 149, 150, 178], "tol": [9, 13, 14, 15, 16, 87, 88, 122, 141, 147, 153, 165, 166, 174, 175], "0": [9, 23, 24, 31, 32, 41, 52, 56, 63, 64, 82, 131, 140, 141, 142, 143, 147, 148, 149, 152, 153, 154, 155, 159, 161, 165, 166, 167, 168, 169, 173, 174, 178, 179, 180, 181, 182, 183, 192, 193, 195], "001": [9, 141, 148, 165, 166], "independennt": 9, "argument": [9, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126], "from": [9, 20, 21, 23, 26, 27, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 69, 70, 82, 83, 84, 137, 160, 164, 178, 179, 180, 181, 182, 183, 185, 187, 188, 190, 192, 193, 194, 195], "float": [9, 13, 14, 15, 16, 22, 23, 24, 31, 32, 56, 63, 64, 86, 87, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 122, 131, 133, 140, 141, 147, 148, 149, 153, 154, 155, 156, 161, 165, 166, 168, 169, 173, 174], "option": [9, 10, 22, 23, 24, 25, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 122, 125, 130, 131, 132, 134, 137, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 159, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 185, 192], "allow": [9, 169], "error": 9, "The": [9, 11, 14, 15, 16, 21, 22, 23, 24, 26, 27, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "default": [9, 10, 13, 14, 15, 16, 22, 23, 24, 25, 28, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 81, 87, 88, 89, 90, 122, 125, 130, 131, 132, 134, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 159, 164, 165, 166, 168, 169, 170, 171, 173, 174, 176, 185, 187, 192, 194], "valu": [9, 13, 14, 15, 16, 32, 56, 87, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 131, 147, 148, 149, 152], "i": [9, 10, 13, 14, 15, 16, 20, 22, 32, 41, 46, 47, 48, 55, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 85, 87, 88, 89, 122, 125, 131, 140, 141, 148, 149, 150, 151, 152, 156, 158, 159, 167, 168, 173, 174, 176, 178, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195], "plot": [10, 38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 132, 183], "fals": [10, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 82, 83, 84, 87, 88, 89, 122, 125, 130, 132, 134, 137, 143, 144, 145, 146, 170, 171, 173, 180], "comput": [10, 11, 12, 16, 22, 23, 24, 26, 27, 49, 51, 52, 63, 64, 66, 82, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 130, 137, 147, 148, 149, 150, 156, 168, 189, 194], "reaction": [10, 91, 98, 170, 171, 193, 194], "support": [10, 39, 61, 68, 86, 91, 98, 99, 129, 131, 132, 133, 144, 160, 172, 182, 183, 185, 186, 192, 194], "formdiagram": [10, 11, 22, 27, 32, 38, 39, 40, 41, 42, 43, 44, 45, 62, 87, 88, 89, 90, 122, 123, 125, 129, 130, 131, 132, 134, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 186, 190, 191, 195], "calcul": [10, 20, 21, 23, 25, 88, 89, 90, 149, 150, 174], "either": 10, "none": [10, 13, 14, 15, 16, 22, 25, 32, 33, 37, 39, 40, 41, 45, 56, 59, 61, 63, 64, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 86, 87, 88, 89, 90, 120, 122, 130, 137, 140, 141, 149, 152, 158, 159, 163, 165, 166, 167, 176, 183], "modifi": [10, 32, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 86, 140, 141, 160, 161, 165, 166, 167, 174, 188], "place": [10, 28, 32, 57, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 122, 140, 141, 158, 159, 165, 166, 167, 192], "us": [11, 22, 28, 38, 39, 40, 41, 42, 43, 44, 45, 52, 55, 57, 60, 61, 63, 64, 65, 66, 67, 68, 79, 80, 82, 85, 86, 96, 97, 110, 123, 129, 130, 131, 132, 134, 137, 148, 149, 151, 152, 157, 178, 185, 186, 187, 188, 189, 192, 193, 194, 195], "forc": [11, 12, 20, 21, 22, 25, 86, 91, 94, 98, 125, 129, 131, 132, 169, 170, 171, 186, 190, 191, 193, 194], "densiti": [11, 12, 20, 21, 22, 23, 24, 25, 86, 94, 129, 131, 194], "method": [11, 13, 14, 15, 16, 22, 27, 28, 30, 34, 56, 57, 87, 88, 122, 150, 162, 189, 192, 193], "fdm": [11, 22, 129, 194], "q": [11, 12, 14, 20, 21, 25, 56, 86, 94, 129, 143, 145, 194], "": [11, 20, 21, 25, 30, 35, 55, 85, 86, 88, 89, 90, 94, 99, 129, 133, 173, 186, 189, 190, 192, 193], "store": [11, 26, 36, 58, 86, 92, 129, 176, 191, 194, 195], "all": [11, 20, 21, 25, 86, 94, 122, 169, 188, 190, 192, 194, 195], "coordin": [11, 22, 23, 24, 25, 91, 98, 99, 125, 133, 140, 142, 163, 173], "chang": 11, "attribut": [11, 56, 86, 142, 147, 150, 172, 176], "relev": [11, 26, 122, 130, 134, 195], "fixiti": 11, "etc": [11, 193], "relax": [11, 194], "residu": 12, "x": [12, 14, 20, 21, 23, 24, 25, 31, 32, 39, 61, 63, 64, 68, 86, 91, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 133, 142, 143, 144, 145, 146, 149, 150, 169, 170, 171, 173, 174, 182, 183, 189, 192], "1": [12, 20, 21, 23, 24, 25, 32, 41, 52, 56, 63, 64, 82, 86, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 142, 149, 150, 153, 174, 178, 179, 180, 181, 182, 183, 189], "class": [12, 26, 27, 28, 56, 57, 86, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 130, 134, 164, 192, 193], "matric": [12, 14, 23, 26, 49, 51, 56, 86, 87, 88, 89, 90, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 130, 134, 137], "rmax": 12, "maximum": [12, 22, 38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 161, 169, 178, 179, 183, 186], "nodal": [12, 26, 86, 147], "svd": [13, 88, 122], "overal": 13, "find": [13, 14, 15, 16, 17, 18, 19, 87, 88, 106, 119, 122, 157, 178, 179, 180, 181, 182, 186, 189, 195], "edg": [13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 86, 87, 88, 94, 122, 131, 148, 149, 150, 172, 176, 180, 194], "depend": [13, 20, 86, 94, 185, 187], "str": [13, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 56, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 77, 79, 80, 81, 82, 83, 84, 87, 88, 122, 124, 130, 134, 137, 169], "more": [13, 21, 60, 61, 63, 64, 65, 66, 67, 68, 88, 122, 185, 189], "come": [13, 88, 122, 185, 187], "toler": [13, 14, 15, 16, 87, 122, 147, 174], "small": [13, 14, 15, 16], "singular": [13, 14, 15, 16, 87], "ind": [13, 14, 15, 16, 17, 18, 19, 20, 86, 94], "list": [13, 14, 15, 16, 17, 18, 19, 20, 24, 71, 72, 74, 77, 79, 80, 81, 86, 88, 89, 90, 91, 94, 98, 99, 124, 133, 141, 142, 152, 157, 159, 160, 163, 167, 168, 169, 175, 176, 189, 192, 194, 195], "column": [13, 14, 15, 16, 17, 18, 19, 86], "rais": [13, 46, 47, 62, 69, 70], "valueerror": [13, 62], "If": [13, 37, 46, 47, 52, 53, 54, 59, 62, 69, 70, 73, 75, 82, 83, 84, 87, 88, 89, 90, 130, 170, 171, 185, 186, 189, 192], "one": [13, 62, 93, 183, 186, 195], "qr": [13, 14, 87], "base": [14, 23, 24, 27, 30, 32, 34, 35, 56, 86, 124, 126, 140, 141, 148, 149, 150, 151, 152, 153, 155, 179, 180, 182, 184, 185, 186, 187, 189, 192, 193, 195], "permut": 14, "factor": 14, "n": [14, 23, 24, 26, 64, 86, 144, 146, 153, 154, 155, 178, 179, 181, 182, 183, 186, 187, 192, 193, 194, 195], "r": [14, 182, 189, 192, 193], "where": [14, 125, 186], "squar": [14, 100, 104, 111, 117, 147, 149, 156, 168, 192], "an": [14, 27, 37, 46, 47, 53, 54, 55, 59, 69, 70, 83, 84, 85, 92, 176, 182, 186, 187, 188, 189], "upper": [14, 86, 99, 133, 174, 190, 194], "triangular": 14, "appli": [14, 20, 23, 24, 25, 29, 30, 32, 33, 34, 35, 39, 41, 61, 68, 86, 88, 89, 90, 101, 102, 129, 131, 132, 140, 141, 149, 153, 154, 155, 161, 169, 170, 171, 173, 183, 189, 190], "thi": [14, 28, 37, 46, 47, 55, 57, 59, 69, 70, 85, 150, 178, 182, 186, 187, 188, 189, 191, 192, 193, 194, 195], "faster": 14, "doe": [14, 15, 16, 185], "preserv": 14, "number": [14, 15, 16, 38, 39, 40, 41, 42, 43, 44, 45, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 86, 192], "structur": [14, 23, 24, 109, 125, 153, 154, 155, 170, 182, 186, 189, 190, 191, 194], "nind": [15, 16], "backward": 15, "last": 15, "remov": [15, 164], "sequenti": [15, 36, 58], "rank": [15, 16], "everytim": [15, 16], "thae": 15, "decreas": 15, "select": [15, 16, 87, 124, 189], "int": [15, 16, 38, 39, 40, 41, 42, 43, 44, 45, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 86, 160], "stop": [15, 16], "process": [15, 16, 26, 56, 132, 135, 185], "known": [15, 16], "advanc": [15, 16], "forward": 16, "reconstruct": 16, "each": [16, 23, 24, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 147, 148, 149, 150, 169, 183, 193, 194, 195], "step": [16, 125, 187, 191], "ad": [16, 126, 170, 171, 185, 192, 195], "increas": [16, 194], "corresp": 16, "out": [17, 19, 185, 188], "inndepend": [17, 18, 19], "exclud": [17, 19, 53, 54, 83, 84], "ins": [18, 19], "includ": [18, 19, 45, 176, 186, 188, 193], "edinv": [20, 94], "ei": [20, 94], "ph": [20, 86, 189], "qid": [20, 21], "k": [20, 21, 86, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 143, 144, 145, 146, 148, 149], "indic": [20, 91, 94, 98, 186], "ni": [20, 25, 86], "invers": 20, "slice": [20, 86], "stack": 20, "free": [20, 25, 86, 185, 188], "node": [20, 23, 24, 25, 29, 30, 31, 32, 34, 35, 86, 104, 117, 140, 141, 142, 147, 153, 154, 155, 160, 161, 164, 165, 166, 173, 183, 194], "pxi": 20, "pyi": 20, "mx1": [20, 21], "note": [20, 21, 109, 122, 125, 126, 130, 134, 137, 149, 150, 167, 174, 176, 178, 179, 180, 181, 183], "follow": [20, 132, 177, 185, 186, 187, 188, 192, 195], "equat": 20, "mathbf": [20, 192], "_mathrm": 20, "id": 20, "ed": 20, "h": [20, 192], "b": [21, 86, 91, 98, 170, 193], "d": [21, 189], "kx1": 21, "linear": [21, 23, 61, 162, 194], "map": [21, 153, 154, 155], "A": [21, 86, 150, 157, 167, 174, 182, 186, 188, 189, 195], "particular": [21, 186, 188], "solut": [21, 178, 179, 180, 181, 186, 187, 191], "block": [21, 182, 186, 188, 189], "lachauer": 21, "2014": 21, "detail": [21, 185, 195], "zmax": 22, "updat": [22, 26, 88, 89, 90, 91, 98, 99, 122, 133, 135, 158, 159, 167, 194], "onli": [22, 125, 169], "z": [22, 25, 52, 82, 146, 163, 182, 183], "height": [22, 151, 152, 173, 174, 193, 194], "By": 22, "set": [22, 50, 56, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 127, 128, 136, 150, 163, 170, 174, 186, 190, 191, 194, 195], "scale": [22, 167], "xyz": [23, 24, 25], "f": [23, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 182, 183, 192, 193], "v0": 23, "v1": [23, 52, 82], "v2": [23, 52, 82], "thk": [23, 24, 33, 91, 98, 99, 133, 178, 179, 181, 182, 183], "5": [23, 24, 31, 140, 142, 153, 154, 155, 169, 173, 180, 183, 189, 192, 193, 195], "20": [23, 24, 148, 149, 180], "tributari": [23, 24], "weight": [23, 24], "assembl": 23, "spars": [23, 25], "link": [23, 72, 74, 77, 79, 80, 81, 124, 160, 189], "topologi": [23, 151, 152, 178, 190], "3": [23, 24, 25, 39, 61, 68, 86, 165, 166, 178, 179, 180, 181, 182, 183, 187], "thrust": [23, 24, 106, 107, 108, 115, 116, 119, 177, 179, 182, 186, 189, 193, 194], "network": [23, 24, 86, 106, 119, 182, 186, 189, 193, 194, 195], "transform": [23, 86, 182], "c": [23, 31, 86, 185, 187, 192, 193], "posit": [23, 25, 26, 29, 86, 133, 160, 174, 192, 193, 194], "centroid": 23, "g": [23, 189], "mark": 23, "influenc": 23, "origin": [23, 37, 59, 99, 133], "point": [23, 33, 38, 39, 40, 41, 42, 43, 44, 45, 51, 56, 60, 61, 63, 64, 65, 66, 67, 68, 80, 86, 95, 96, 97, 98, 99, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 133, 140, 152, 160, 163, 167, 172, 182, 183, 185, 186, 192, 193], "neighbor": 23, "thick": [23, 24, 40, 41, 42, 43, 44, 63, 64, 65, 66, 67, 86, 91, 98, 99, 106, 109, 119, 120, 133, 177, 178, 179, 180, 182, 183, 186, 193, 194, 195], "volum": [23, 24], "vertic": [23, 24, 25, 64, 86, 91, 98, 99, 100, 111, 133, 142, 163, 182, 183, 186, 194], "pz": [23, 24], "tributary_dict": 24, "trbutari": 24, "geometri": [24, 125, 182, 183, 186, 190, 191, 193, 194, 195], "dictionari": [24, 86, 134, 157, 194], "dict": [24, 86, 134, 157], "triangl": [24, 187], "area": [24, 149], "pi": 25, "xb": 25, "ci": [25, 86], "cit": [25, 86], "cb": [25, 86], "splu_d": 25, "extern": [25, 64, 86, 189], "nb": [25, 39, 61, 68, 86, 170, 171], "connect": [25, 28, 57, 86, 185, 186, 188, 190, 195], "transpos": [25, 86], "callabl": [25, 96, 97, 124], "lu": 25, "decomposit": 25, "citqci": 25, "speed": 25, "up": [25, 29, 127, 128, 136, 186, 190, 195], "xfree": 25, "y": [25, 31, 32, 86, 91, 98, 99, 133, 142, 169, 173, 174, 182, 183, 192], "variabl": [26, 56, 81, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 133], "data": [27, 37, 46, 47, 49, 51, 52, 53, 54, 55, 56, 59, 69, 70, 82, 83, 84, 85, 130, 190, 194], "organis": 27, "involv": [27, 167], "unit": 27, "shape": [27, 35, 38, 39, 40, 41, 42, 43, 44, 45, 62, 127, 128, 136, 138, 139, 143, 174, 178, 179, 180, 181, 182, 183, 191], "exampl": [27, 52, 82, 178, 179, 180, 181, 182, 183, 186, 190, 192, 193, 194, 195], "import": [27, 52, 82, 178, 179, 180, 181, 182, 183, 192, 193, 195], "compas_tna": [27, 178, 179, 180, 181, 182, 183, 192, 193, 195], "envelop": [27, 30, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 56, 91, 98, 99, 133, 147, 178, 179, 180, 181, 182, 183, 186, 190, 191, 194, 195], "arch": [27, 179], "create_arch": 27, "create_minthrust_analysi": [27, 178, 179, 180, 195], "inherit": [27, 56], "convert": [28, 53, 54, 57, 83, 84], "instanc": [28, 46, 47, 57, 69, 70], "string": [28, 47, 54, 57, 70, 84, 194], "exist": [28, 57, 190], "net": [28, 57], "compat": [28, 57, 182, 189], "when": [28, 57, 192, 194, 195], "ironpython": [28, 57], "implicit": [28, 57], "convers": [28, 57], "usual": [28, 57, 151, 152], "take": [28, 57, 185], "cpython": [28, 57], "kick": [28, 57], "its": [28, 53, 54, 57, 83, 84, 167, 186, 193], "print": [28, 38, 39, 40, 41, 42, 43, 44, 45, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 87, 88, 89, 122, 130, 134, 137, 143, 144, 145, 146, 170, 171, 183], "self": [28, 57], "gettyp": [28, 57], "fullnam": [28, 57], "similar": [28, 57], "overrid": [28, 57], "object": [28, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 77, 83, 84, 85, 86, 91, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 133, 135, 136, 137, 138, 139, 186, 190, 191, 193], "make": [28, 37, 57, 59], "rhino": [28, 57, 187], "grasshopp": [28, 57], "displai": [28, 57, 73, 75, 143, 144, 145, 146, 187], "proper": [28, 57], "represent": [28, 53, 54, 57, 83, 84], "panel": [28, 57], "other": [28, 57, 188], "type": [28, 37, 46, 47, 55, 57, 59, 69, 70, 85, 142, 187], "output": [28, 53, 54, 57, 83, 84, 92, 93, 134, 186, 195], "kei": [29, 86, 160, 183], "crack": [29, 142, 186, 193], "down": 29, "invok": [30, 34, 150], "ub": [30, 86, 99, 133], "lb": [30, 86, 99, 133], "intrado": [30, 86, 174, 186, 190, 193], "extrado": [30, 86, 174, 186, 190, 193, 194], "_summary_": 31, "distanc": [31, 100, 104, 111, 117, 153, 154, 155, 156, 161, 165, 166, 168, 173, 194], "constraint": [31, 56, 72, 86, 95, 96, 97, 126, 142, 147, 168, 169, 170, 171, 190, 195], "limit": [31, 33, 86, 91, 98, 99, 133, 170, 171, 186, 188, 189, 194], "hor": 31, "movement": [31, 186, 194], "multipli": [32, 63, 64, 194], "compon": 32, "selfweight": [32, 34], "direct": [32, 63, 64, 86, 160, 169, 173, 187, 192, 194], "assume_shap": 33, "respect": [33, 94, 109, 147, 192], "anchor": [33, 182, 183], "normalize_load": 34, "target": [35, 100, 111, 150, 156, 194], "surfac": [35, 86, 149, 150, 156, 190], "clear": [36, 58], "previou": [36, 58], "result": [36, 58, 134, 137], "necessari": [36, 58, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 191, 192, 195], "perform": [36, 58, 164, 185, 190, 191, 192], "same": [36, 37, 58, 59, 160], "cl": [37, 59, 151, 152, 163, 164], "copy_guid": [37, 59], "compa": [37, 46, 47, 52, 59, 69, 70, 82, 164, 178, 179, 180, 181, 182, 183, 186, 187, 189, 191, 193], "current": [37, 56, 59, 91, 98, 99, 133, 179, 180, 181, 183, 187, 194], "have": [37, 59, 129, 131, 132, 185, 189], "guid": [37, 53, 54, 59, 83, 84, 186, 187, 191], "classmethod": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 85], "printout": [38, 39, 40, 41, 42, 43, 44, 45, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 87, 88, 89, 122, 130, 134, 137, 143, 144, 145, 146, 170, 171, 178, 179, 180, 181, 182, 183], "max_it": [38, 39, 40, 41, 42, 43, 44, 45, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76], "500": [38, 39, 40, 41, 42, 43, 44, 45, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76], "starting_point": [38, 39, 40, 41, 42, 43, 44, 45, 56, 60, 61, 63, 64, 65, 66, 67, 68, 80, 194], "loadpath": [38, 39, 40, 41, 42, 43, 44, 45, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 105, 118, 130, 134, 194], "slsqp": [38, 42, 43, 44, 56, 60, 61, 63, 64, 65, 66, 67, 68, 79, 125, 181, 185, 194], "deriv": [38, 41, 43, 60, 63, 64, 66, 99], "creat": [38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 93, 151, 152, 153, 154, 155, 157, 163, 182, 183, 190, 192, 193, 194], "bestfit": [38, 56, 60, 194], "element": [38, 39, 40, 41, 42, 43, 44, 45, 49, 51, 186, 190, 194, 195], "model": [38, 39, 42, 43, 44, 45], "surfacemodel": [38, 39, 42, 43, 44, 45], "analys": [38, 39, 42, 43, 44, 45, 87, 88, 89, 90, 99, 133, 191, 192], "whether": [38, 39, 40, 41, 42, 43, 44, 45, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 122, 125, 134, 137, 140, 141, 143, 144, 145, 146, 167, 188], "appear": [38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 122, 130, 183, 189], "creen": [38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68], "show": [38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 87, 88, 89, 178, 179, 180, 181, 182, 183, 189, 193, 195], "intermedi": [38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68], "state": [38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 186, 194], "itet": [38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68], "which": [38, 39, 40, 41, 42, 43, 44, 45, 60, 61, 63, 64, 65, 66, 67, 68, 86, 114, 126, 148, 149, 160, 176, 185, 189, 191, 192, 193, 195], "start": [38, 39, 40, 41, 42, 43, 44, 45, 51, 56, 60, 61, 63, 64, 65, 66, 67, 68, 80, 86, 153, 154, 155, 160, 161, 173, 177, 186, 192], "should": [38, 39, 61, 68, 73, 75, 87, 88, 89, 90, 122, 125, 130, 140, 141, 150, 160, 167, 183, 194, 195], "consid": [38, 39, 61, 68, 88, 89, 90, 99, 130, 133, 149, 167, 192], "ipopt": [39, 41, 45, 56, 125, 138, 194], "support_displac": [39, 45, 56, 61, 68, 182], "emethod": [39, 45, 61, 68], "simplifi": [39, 45, 61, 68], "complementari": [39, 45, 61, 68, 101, 102, 112, 113, 194], "energi": [39, 45, 61, 68, 101, 102, 112, 113, 182, 189, 194], "displac": [39, 61, 68, 101, 102, 153, 154, 155, 161, 174, 182], "intern": [39, 61, 68, 86, 186, 189], "deform": [39, 61, 68], "materi": [39, 61, 68, 86, 148, 149], "rigid": [39, 61, 68], "cvxpy": [40, 56, 62, 134, 136, 137, 185], "minimum": [40, 41, 43, 44, 63, 64, 66, 67, 177, 178, 179, 181, 186], "_description_": [40, 41, 62], "constrain": [40, 41, 86, 142, 186], "load_direct": [41, 63, 64, 183], "max_lambd": [41, 63, 64, 183], "quadrat": [45, 68, 194], "term": 45, "filepath": [46, 53, 69, 83], "construct": [46, 47, 55, 69, 70, 85, 163, 189, 192], "json": [46, 47, 53, 54, 69, 70, 83, 84, 92, 93, 125], "file": [46, 53, 69, 83, 93, 188], "path": [46, 53, 69, 83, 160, 190], "contain": [46, 47, 69, 70, 137, 150, 186, 194, 195], "ha": [46, 47, 69, 70, 182, 186, 193, 194, 195], "correct": [46, 47, 69, 70, 140, 141], "schema": [46, 47, 55, 69, 70, 85, 174], "typeerror": [46, 47, 69, 70], "convex": [48, 127, 136, 137, 185], "With": [49, 51, 186], "kwarg": [50, 78, 93, 129, 130, 131, 132], "addit": [50, 78, 106, 119, 160, 184, 187, 194], "as_str": [52, 82], "hash": [52, 82], "comparison": [52, 82], "dure": [52, 82, 125, 186], "version": [52, 82], "control": [52, 82, 192], "digest": [52, 82], "hexadecim": [52, 82], "format": [52, 53, 54, 82, 83, 84], "rather": [52, 82], "than": [52, 82], "byte": [52, 82], "datastructur": [52, 82, 164], "mesh": [52, 82, 151, 152, 158, 159, 163, 164, 167, 192, 193], "from_obj": [52, 82], "get": [52, 82, 185, 186], "face": [52, 82], "obj": [52, 82, 137, 138, 151, 152], "vertex_attribut": [52, 82], "vertex_sampl": [52, 82], "v3": [52, 82], "pretti": [53, 54, 83, 84], "compact": [53, 54, 83, 84], "minim": [53, 54, 83, 84], "nativ": [53, 54, 83, 84], "save": [53, 54, 83, 84, 93, 125], "newlin": [53, 54, 83, 84], "indent": [53, 54, 83, 84], "without": [53, 54, 83, 84, 164, 188], "ani": [53, 54, 55, 83, 84, 85, 188], "whitespac": [53, 54, 83, 84], "valid": [55, 85], "against": [55, 85], "raw": [55, 85], "__from_data__": [55, 85], "x0": [56, 86, 96, 97, 153, 174], "xopt": [56, 93], "solv": [56, 185, 186, 195], "thhe": 56, "fopt": [56, 183], "function": [56, 72, 74, 77, 81, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 130, 133, 190, 194, 195], "end": [56, 153, 154, 155, 161, 173, 192], "messag": [56, 143, 144, 145, 146], "provid": [56, 75, 167, 177, 186, 188, 192, 193, 194, 195], "relevat": 56, "time": 56, "consumpt": 56, "niter": 56, "iter": [56, 73, 76, 92, 93, 125], "exitflag": [56, 195], "wa": [56, 195], "successfulli": 56, "repres": [56, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 186, 190, 192, 193], "log": 56, "avail": [56, 130, 134, 137, 185, 190, 194], "some": 56, "main": [56, 123, 130, 191, 192, 194], "shown": 56, "below": [56, 86, 149, 174, 189, 191, 192, 193, 194, 195], "min": [56, 77, 177, 186], "max": [56, 177, 186], "t": [56, 99, 133, 178, 182, 189, 193, 194], "funicular": [56, 189, 194], "reac_bound": [56, 194], "zb": [56, 146, 194], "xyb": [56, 194], "featur": [56, 74, 76, 79], "sym": [56, 194], "find_ind": [56, 122, 130, 137], "solver_convex": [56, 130, 134, 137], "clarabel": [56, 62, 130, 134, 137, 185], "mosek": [56, 62, 130, 134, 137], "gradient": [56, 75, 97, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124], "jacobian": [56, 75, 96, 126], "solver_opt": 56, "qmin": [56, 86], "1e": [56, 147, 165, 166, 175, 182, 183], "4": [56, 148, 178, 179, 182, 183], "qmax": [56, 86], "8": [56, 187, 189], "sent": [60, 61, 62, 63, 64, 65, 66, 67, 68], "instruct": [60, 61, 62, 63, 64, 65, 66, 67, 68], "see": [60, 61, 63, 64, 65, 66, 67, 68, 72, 74, 77, 79, 80, 81, 124, 178, 185, 194, 195], "page": [60, 61, 63, 64, 65, 66, 67, 68, 186, 191], "inform": [60, 61, 63, 64, 65, 66, 67, 68, 125, 127, 128, 136, 137, 138, 139, 185, 190, 194, 195], "cconstrain": 62, "2n": [63, 86], "hand": [63, 64, 66, 97], "axis_sym": [71, 194], "axi": [71, 88, 89, 90, 141, 157], "symmetri": [71, 88, 89, 90, 140, 141, 143, 144, 145, 146, 157, 194], "line": [71, 157, 160, 175, 182, 192], "wihth": [72, 81], "name": [72, 74, 77, 81, 124, 182, 183, 187, 194], "activ": [72, 74, 81, 187, 194], "For": [72, 74, 77, 79, 80, 81, 124, 193, 195], "possibl": [72, 74, 77, 79, 80, 81, 190], "partial": [73, 86], "evok": 73, "screen": [73, 87, 88, 89, 122, 130, 170, 171, 183], "analyt": [75, 126], "call": [77, 134], "starat": 80, "These": [86, 190], "describ": [86, 192, 193, 194], "ct": 86, "regard": [86, 88, 89, 90, 94], "u": 86, "diagon": [86, 182, 192], "coorrdin": 86, "differ": [86, 96, 97, 192, 194], "v": 86, "index": [86, 182], "phfree": 86, "2": [86, 153, 154, 155, 164, 170, 171, 178, 179, 180, 181, 182, 183, 189], "horizon": 86, "lower": [86, 99, 133, 167, 174, 186, 189, 190, 194], "bound": [86, 91, 98, 99, 133, 167, 186, 189, 194, 195], "lb0": 86, "ub0": 86, "middl": [86, 149, 150, 174], "y0": [86, 153, 154, 155, 161, 173, 174], "free_x": 86, "move": [86, 165, 166, 194], "free_i": 86, "rol_x": 86, "rol_i": 86, "citx": 86, "citi": 86, "cbtx": 86, "cbty": 86, "xlimit": 86, "ylimit": 86, "k_i": 86, "uv_i": 86, "uv": 86, "i_uv": 86, "dep": [86, 94], "rho": 86, "adapt": [87, 88, 89, 194], "assum": [87, 88, 89, 141, 148], "plan": [87, 153, 154, 155, 194], "list_axis_symmetri": [88, 89, 90, 141], "center": [88, 89, 90, 140, 180, 192, 193], "correct_load": [88, 89, 90, 140, 141], "symmetr": [88, 89], "plane": 88, "pattern": [88, 89, 90, 91, 98, 99, 104, 117, 133, 140, 141, 150, 153, 154, 155, 157, 161, 165, 166, 169, 173, 186], "circula": [88, 89, 90], "done": [88, 89, 90, 185, 187], "extens": [91, 98], "xcoordin": [91, 98, 99, 133], "pass": [91, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 133, 194], "new": [91, 99, 133, 177, 186, 187, 189], "arg": [93, 96, 97], "sensit": [94, 98, 99, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "invert": 94, "equilibrum": 94, "dq": 94, "dqdep": 94, "wrapper": 95, "assign": [95, 122, 126, 129, 131, 132, 142, 169, 195], "fconstr": [96, 97], "ep": [96, 97], "approxim": [96, 97], "finit": [96, 97], "np": [96, 126, 182, 183], "ndarrai": [96, 126], "perturb": 96, "size": [96, 97, 192], "dfdx": 96, "fobj": [97, 124], "pertub": 97, "df0dx": 97, "difer": 97, "derriv": 98, "db": 98, "outer": [99, 133], "level": [99, 133], "dub": 99, "dlb": 99, "minimis": [100, 101, 102, 104, 105, 106, 108, 111, 112, 113, 116, 117, 118, 119, 120, 194], "given": [100, 101, 102, 104, 117, 123, 151, 152], "foundat": [101, 102, 182, 186, 189], "nonlinear": [102, 113, 128, 138, 139, 194, 195], "constant": [103, 148, 149, 194], "feasibl": [103, 106, 114, 119, 194], "requir": [106, 119, 137, 184, 187], "maximis": [107, 115, 194], "reduc": 109, "pleas": [109, 186, 189], "order": [109, 126], "tight": [110, 121], "cross": [110, 121, 177, 181, 182, 186, 192, 193, 195], "section": [110, 121, 148, 149, 186, 194], "normal": 110, "grad": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "null": 114, "initialis": [122, 123], "found": [122, 130, 186], "tool": 122, "od": 122, "essenti": 122, "initialise_problem_gener": 122, "info": 122, "build": [123, 143, 144, 145, 146, 189], "subsequ": 123, "desir": [124, 142], "complet": [124, 184], "objective": 124, "fgrad": 124, "work": [125, 185, 187], "numer": [125, 185, 189, 191], "about": [125, 127, 128, 130, 136, 138, 139, 185, 186, 189, 194], "also": [125, 192], "xforc": 125, "address": 125, "xform": 125, "observ": 126, "initi": [129, 131, 132, 149, 194], "approach": [129, 131, 189], "must": [129, 131, 132, 137, 185], "alreadi": [129, 131, 132, 185, 189], "been": [129, 131, 132, 182, 186, 194, 195], "built": 130, "project": [130, 150, 185, 186, 190], "classs": 130, "need": [130, 178, 179, 180, 181, 183, 185, 187, 195], "befor": [130, 137, 150, 194], "cvxopt": [130, 134, 137], "instal": [130, 134, 137, 178, 179, 180, 181, 183, 184, 185, 186], "tno": [130, 134, 137, 177, 185, 186, 187, 189, 191], "boundary_forc": 131, "50": [131, 142, 178, 179, 181, 182, 183], "sag": [131, 194], "boundari": [131, 165, 166, 168, 169, 174, 193, 194], "tna": [132, 189, 194], "inter": 132, "procedur": 132, "parallel": [132, 192], "intermediar": 132, "final": 132, "arai": 133, "post": 135, "after": [136, 191, 195], "go": [136, 182, 187], "through": [136, 185, 187, 192, 193], "directli": [137, 187], "ob": 137, "full": [137, 192, 193, 195], "interest": 137, "scipi": [139, 185, 194], "radial": [140, 180, 192], "applic": [140, 141, 190], "dome": [140, 177, 186, 192, 193, 194], "circulat": 140, "perfect": [140, 141], "01": [141, 174, 182], "seri": [141, 186, 190, 193, 194, 195], "rectangular": [141, 157, 168, 169], "toller": 141, "dx": [142, 153, 154, 155], "55": 142, "dy": 142, "top": 142, "forcediagram": [142, 169], "rang": 142, "apply": 142, "bottom": 142, "asym": 143, "evsym": [144, 146], "esym": 145, "qsym": 145, "06": [147, 175], "penalti": 147, "6": [147, 148, 149, 193], "sum": 147, "exceed": 147, "20000000": [148, 149], "ah": 148, "stiff": [148, 149], "divid": 148, "length": [148, 149, 150, 182], "thoughout": 148, "young": [148, 149], "modulu": [148, 149], "axial": 148, "stress": [148, 186], "20e": [148, 149], "correspond": [148, 149, 186, 192], "gpa": [148, 149], "commonli": [148, 149], "concret": [148, 149], "throughout": 148, "10e": 148, "correspont": 148, "compress": [148, 186, 194], "10": [148, 153, 154, 155, 159, 161, 167, 168, 169, 173, 174, 178, 179, 181, 182, 183, 189, 192, 193, 195], "mpa": 148, "125": [149, 182, 189], "case": [149, 189, 192], "25": 149, "formula": 149, "frac": 149, "ea": 149, "l_": 149, "mathrm": [149, 178, 192, 193], "onto": 150, "obtain": [150, 185, 186, 188, 191], "meshtopologi": 151, "mesh_bas": 151, "denser": [151, 152], "intend": [151, 152], "keep": [151, 152, 172], "interpol": [151, 152], "pointcloud": [152, 162], "isnan_height": 152, "nan": 152, "y1": [153, 154, 155, 161, 173, 174], "x1": [153, 174], "paraboloid": [153, 155], "slide": [153, 154, 155, 173], "delta": [153, 154, 155, 161, 173, 174], "parabol": [153, 154, 155, 161, 173, 174], "profil": [153, 154, 155, 161, 173], "field": [153, 154, 155], "1d": 154, "parabola": 154, "xc": [155, 183], "yc": [155, 183], "radiu": [155, 180, 192, 193], "measur": 156, "among": 156, "tn": 156, "data_form": 157, "boudnari": 158, "along": 158, "corner": [159, 167, 182, 192, 193], "loaded_nod": [160, 183], "add": [160, 182, 183, 192, 193], "chosen": 160, "modif": [160, 161, 195], "new_loaded_nod": 160, "ordin": 161, "xy": [162, 163], "delaunai": 163, "triangul": 163, "meshdo": [163, 174], "delete_boundary_fac": 164, "valent": 164, "oper": [164, 191], "slightli": [165, 166], "inward": [165, 166], "outward": [165, 166], "fix_corn": 167, "coincid": 167, "box": 167, "translat": 167, "adopt": 167, "pt": [167, 183], "four": [167, 190, 192], "xy_span": [168, 169], "smooth": [168, 169], "footprint": [168, 169], "max_f": 169, "constraint_direct": 169, "roller": [169, 171], "defin": [169, 173, 182, 190, 191, 192, 193, 194, 195], "restrict": [169, 188], "helper": [170, 171], "thr": [170, 171], "shuffl": 172, "reorder": 172, "It": [172, 185, 193], "_is_edg": [172, 180], "tapper": 173, "toward": 173, "upon": 173, "vault": [174, 177, 181, 182, 186, 189, 192, 193], "quadrant": 174, "q3": 174, "q2": 174, "q1": 174, "q4": 174, "split": [175, 192], "accort": 175, "intersect": [175, 192], "clean_lin": 175, "ind_edg": 176, "midpoint": 176, "usinf": 177, "simpl": [177, 186], "crossvault": [177, 186, 193, 195], "subject": [177, 186, 188, 194], "settlement": [177, 186, 189], "collaps": [177, 186], "round": [178, 193], "span": [178, 192, 193], "l": [178, 179, 181, 182, 183], "tutori": [178, 186, 192, 193, 194, 195], "THE": [178, 179, 180, 181, 183, 188], "OF": [178, 179, 180, 181, 183, 188], "masonri": [178, 179, 180, 181, 182, 183, 186, 187, 189, 191], "viewer": [178, 179, 180, 181, 182, 183, 195], "compas_masonri": [178, 179, 180, 181, 182, 183, 187, 193, 195], "masonryview": [178, 179, 180, 181, 182, 183, 193, 195], "crossvaultenvelop": [178, 179, 181, 182, 183, 193, 195], "geometr": [178, 179, 180, 181, 182, 183, 190, 192], "definit": [178, 179, 180, 181, 182, 183, 190, 193], "x_span": [178, 179, 181, 182, 183, 192, 193, 195], "y_span": [178, 179, 181, 182, 183, 192, 193, 195], "14": [178, 179, 181, 182, 183, 192], "create_cross": [178, 181, 182, 183, 192], "thurst": [178, 179, 180, 181], "visualis": [178, 179, 180, 181, 183, 193], "apply_selfweight": [178, 179, 180, 181, 182, 183, 195], "apply_envelop": [178, 179, 180, 181, 182, 183, 195], "set_up_optimis": [178, 179, 180, 181, 182, 183, 195], "setup": [178, 179, 180, 181, 182, 183, 193, 195], "create_maxthrust_analysi": [178, 179], "vailt": 179, "fan": [179, 192], "create_fan": [179, 192], "n_fan": [179, 192], "n_hoop": [179, 180, 192, 193], "domeenvelop": [180, 193], "r_oculu": [180, 192, 193], "min_lb": 180, "12": [180, 192], "n_parallel": [180, 192, 193], "24": [180, 193], "create_circular_radial_spac": 180, "edges_on_boundari": 180, "edge_attribut": 180, "form_max_thk": 180, "03": 180, "create_minthk_analysi": [181, 195], "discuss": [182, 195], "public": [182, 186], "maia": [182, 186, 189], "avelino": [182, 186, 189], "iannuzzo": [182, 189], "van": [182, 189], "mele": [182, 189], "strategi": [182, 189, 192], "admiss": [182, 186, 189], "mechan": [182, 189], "research": [182, 186, 188, 189], "commun": [182, 189], "vol": [182, 189], "103978": [182, 189], "oct": [182, 189], "2022": [182, 189], "doi": [182, 189], "1016": [182, 189], "j": [182, 189], "mechrescom": [182, 189], "numpi": [182, 183, 185], "color": [182, 183], "corner_vertic": 182, "empti": 182, "row": 182, "displacement_arrai": 182, "displ_point": 182, "over": [182, 191], "vertex": 182, "vertex_coordin": [182, 183], "append": [182, 183], "els": 182, "create_compl_energy_analysi": [182, 195], "viz": 182, "enumer": 182, "displacement_vector": 182, "anchor_point": [182, 183], "black": [182, 183], "scene": [182, 183, 193], "displacement_corner_": 182, "linecolor": [182, 183], "linewidth": [182, 183], "sampl": 183, "parametr": [183, 189, 192], "implement": [183, 186, 194, 195], "succes": 183, "distance_point_point_xi": 183, "form_add_lines_support": 183, "load_po": 183, "yp": 183, "break": 183, "vertices_wher": 183, "is_support": 183, "coord": 183, "number_of_vertic": 183, "zero": 183, "create_max_load_analysi": [183, 195], "10000": 183, "load_vector": 183, "applied_": 183, "now": 184, "you": [184, 185, 186, 187, 189, 191], "head": 184, "packag": [184, 185, 186, 187, 190, 192], "care": 185, "most": [185, 187], "howev": 185, "few": [185, 187], "librari": [185, 193, 194], "environ": 185, "via": 185, "python": [185, 186, 187], "interior": 185, "termin": [185, 187], "conda": 185, "forg": [185, 187], "cyipopt": 185, "here": [185, 190, 195], "http": 185, "pypi": [185, 187], "org": 185, "_": [185, 192], "stabl": 185, "softwar": [185, 188], "access": 185, "To": [185, 186, 187, 189, 190, 192, 193], "yourself": 185, "licens": [185, 186], "purchas": 185, "scholar": 185, "websit": 185, "how": [185, 189, 192], "www": 185, "com": 185, "product": 185, "academ": 185, "onc": 185, "we": [185, 187], "sever": 185, "learn": 185, "what": 185, "both": [185, 192], "togeth": 185, "pip": [185, 187], "within": [186, 190, 194, 195], "framework": 186, "modular": 186, "multi": 186, "safe": 186, "theorem": 186, "least": 186, "multipl": [186, 193], "beyond": [186, 194, 195], "look": 186, "touch": 186, "explor": [186, 189, 192, 193], "evelop": 186, "nolinear": 186, "prepar": 186, "your": [186, 187, 189], "machin": [186, 187], "develop": 186, "ricardo": [186, 189], "doctor": [186, 189], "group": [186, 188], "eth": [186, 188, 189], "zurich": [186, 188, 189], "fund": 186, "swiss": 186, "nation": 186, "scienc": [186, 189], "snsf": 186, "grant": [186, 188], "178953": 186, "refer": [186, 189], "our": 186, "workflow": [186, 190], "api": 186, "basic": 187, "prerequisit": 187, "anaconda": 187, "next": 187, "highli": 187, "recommend": 187, "relat": 187, "separ": [187, 193, 194, 195], "In": [187, 189], "environmen": 187, "9": [187, 189], "newer": 187, "open": [187, 192], "wai": 187, "navig": 187, "folder": 187, "3d": [187, 193], "finalis": 187, "additon": 187, "progress": 187, "ui": 187, "being": [187, 192], "develeop": 187, "soon": 187, "mit": 188, "permiss": 188, "herebi": 188, "charg": 188, "person": 188, "copi": 188, "associ": 188, "document": [188, 192, 193, 195], "deal": [188, 190, 194], "right": [188, 192, 194, 195], "merg": 188, "publish": 188, "sublicens": 188, "sell": 188, "permit": 188, "whom": 188, "furnish": 188, "do": 188, "so": 188, "condit": 188, "abov": [188, 190, 192], "copyright": 188, "notic": 188, "shall": 188, "substanti": 188, "portion": 188, "AS": 188, "warranti": 188, "kind": 188, "express": 188, "OR": 188, "impli": 188, "BUT": 188, "NOT": 188, "TO": 188, "merchant": 188, "fit": 188, "FOR": 188, "purpos": 188, "AND": 188, "noninfring": 188, "IN": 188, "NO": 188, "event": 188, "author": 188, "holder": 188, "BE": 188, "liabl": 188, "claim": 188, "damag": 188, "liabil": 188, "action": 188, "contract": 188, "tort": 188, "otherwis": 188, "aris": 188, "WITH": 188, "cite": 189, "dissert": 189, "assess": [189, 190], "thesi": 189, "2023": 189, "want": 189, "know": 189, "conduct": 189, "safeti": 189, "257": 189, "106647": 189, "dec": 189, "2021": 189, "compstruc": 189, "stabil": 189, "groin": 189, "11": 189, "3560": 189, "apr": 189, "3390": 189, "app11083560": 189, "unreinforc": 189, "12th": 189, "confer": 189, "histor": 189, "barcelona": 189, "spain": 189, "pp": 189, "2124": 189, "2135": 189, "23967": 189, "sahc": 189, "162": 189, "collabor": 189, "workshop": 189, "fugger": 189, "de": 189, "felic": 189, "anaysi": 189, "retrofit": 189, "curv": 189, "frcm": 189, "system": 189, "8th": 189, "european": 189, "congress": 189, "engin": 189, "june": 189, "oslo": 189, "norwai": 189, "et": 189, "al": 189, "integr": 189, "Of": 189, "st": 189, "angelo": 189, "church": 189, "anagni": 189, "241": 189, "12917": 189, "stru241": 189, "13": 189, "theori": 189, "good": 189, "three": [189, 193, 195], "dimension": 189, "massachusett": 189, "institut": 189, "technologi": 189, "2009": 189, "o": [189, 192], "dwyer": 189, "73": 189, "187": 189, "197": 189, "1999": 189, "s0045": 189, "7949": 189, "98": 189, "00279": 189, "heyman": 189, "stone": 189, "skeleton": 189, "journal": 189, "solid": 189, "249": 189, "279": 189, "1966": 189, "0020": 189, "7683": 189, "66": 189, "90018": 189, "7": [189, 193], "interpret": 190, "distinct": 190, "graph": 190, "acquir": 190, "manag": 190, "illustr": [190, 194], "showcas": 190, "summaris": 191, "imag": 191, "herein": [191, 192, 193], "flow": 191, "gather": 191, "precondit": [191, 194], "quick": [192, 193, 194, 195], "tour": [192, 193, 194, 195], "gener": [192, 193, 194, 195], "parent": 192, "purelli": 192, "from_lin": 192, "user": [192, 194, 195], "from_mesh": 192, "enabl": [192, 193], "combin": 192, "draw": 192, "freeli": 192, "common": 192, "layout": [192, 193], "figur": 192, "polar": 192, "two": 192, "discretis": [192, 195], "member": [192, 194], "n_": 192, "circular": 192, "hoop": 192, "locat": 192, "central": 192, "oculu": 192, "r_": 192, "code": [192, 193, 195], "long": 192, "create_circular_radi": 192, "16": 192, "75": [192, 193], "automat": 192, "diagonal_typ": 192, "quad": 192, "straight": 192, "left": 192, "neg": 192, "orthogon": 192, "dimens": 192, "x_": [192, 193], "y_": [192, 193], "suitabl": 192, "continu": 192, "pavillion": [192, 193], "present": [192, 193, 194], "create_ortho": 192, "nx": 192, "ny": 192, "ident": 192, "unlik": 192, "arrang": 192, "segment": 192, "arriv": 192, "receiv": 192, "ones": 192, "altern": 192, "further": [192, 193], "subclass": 193, "meshenvelop": 193, "parametricenvelop": 193, "brepenvelop": 193, "brep": 193, "commom": 193, "hemispher": 193, "One": 193, "40": 193, "100": [193, 195], "pointedvaultenvelop": 193, "h_": 193, "hc": 193, "he": 193, "pavillionvaultenvelop": 193, "spring": 193, "angl": 193, "beta": 193, "spr_angl": 193, "30": 193, "view": [193, 195], "chart": 194, "categori": 194, "tabl": 194, "thei": 194, "sting": 194, "min_thk": 194, "lambd": 194, "mulipli": 194, "tub": 194, "tlb": 194, "objeect": 194, "min_thrust": 194, "max_thrust": 194, "test": 194, "offset": 194, "intra": 194, "equival": 194, "ecomp": 194, "max_sect": 194, "envelopexi": 194, "non": 194, "magnitud": 194, "descript": 194, "execut": 194, "nlopt": 194, "graphic": 194, "specif": [194, 195], "nevertheless": [194, 195], "dictionati": [194, 195], "create_lp_optimis": 194, "create_max_horload_optimis": 194, "create_max_vertload_optimis": 194, "create_maxthrust_optimis": 194, "create_minthrust_optimis": 194, "create_minthk_optimis": 194, "compos": 195, "from_el": 195, "from_form_and_optimis": 195, "from_form_and_shap": 195, "create_lp_analysi": 195, "create_maxhrust_analysi": 195, "apply_reaction_bound": 195, "apply_hor_multipli": 195, "command": 195, "shallow": 195, "create_cross_form": 195, "masori": 195, "therefor": 195, "guarante": 195, "reason": 195, "alwai": 195, "satisfactori": 195, "inde": 195}, "objects": {"compas_tno.algorithms": [[8, 0, 1, "", "check_horizontal_loads"], [9, 0, 1, "", "check_independents"], [10, 0, 1, "", "compute_reactions"], [11, 0, 1, "", "equilibrium_fdm"], [12, 0, 1, "", "equilibrium_residual"], [13, 0, 1, "", "find_independents"], [14, 0, 1, "", "find_independents_QR"], [15, 0, 1, "", "find_independents_backward"], [16, 0, 1, "", "find_independents_forward"], [17, 0, 1, "", "independents_exclude"], [18, 0, 1, "", "independents_include"], [19, 0, 1, "", "inds_incl_excl"], [20, 0, 1, "", "q_from_qid"], [21, 0, 1, "", "q_from_variables"], [22, 0, 1, "", "vertical_equilibrium_fdm"], [23, 0, 1, "", "weights_from_xyz"], [24, 0, 1, "", "weights_from_xyz_dict"], [25, 0, 1, "", "xyz_from_q"], [26, 0, 1, "", "xyz_from_xopt"]], "compas_tno.analysis": [[27, 1, 1, "", "Analysis"]], "compas_tno.analysis.Analysis": [[28, 2, 1, "", "ToString"], [29, 2, 1, "", "apply_cracks"], [30, 2, 1, "", "apply_envelope"], [31, 2, 1, "", "apply_envelope_on_xy"], [32, 2, 1, "", "apply_hor_multiplier"], [33, 2, 1, "", "apply_reaction_bounds"], [34, 2, 1, "", "apply_selfweight"], [35, 2, 1, "", "apply_target"], [36, 2, 1, "", "clear_previous_results"], [37, 2, 1, "", "copy"], [38, 2, 1, "", "create_bestfit_analysis"], [39, 2, 1, "", "create_compl_energy_analysis"], [40, 2, 1, "", "create_lp_analysis"], [41, 2, 1, "", "create_max_load_analysis"], [42, 2, 1, "", "create_maxthrust_analysis"], [43, 2, 1, "", "create_minthk_analysis"], [44, 2, 1, "", "create_minthrust_analysis"], [45, 2, 1, "", "create_quad_compl_energy_analysis"], [46, 2, 1, "", "from_json"], [47, 2, 1, "", "from_jsonstring"], [48, 2, 1, "", "is_convex"], [49, 2, 1, "", "run"], [50, 2, 1, "", "set_optimiser_options"], [51, 2, 1, "", "set_up_optimiser"], [52, 2, 1, "", "sha256"], [53, 2, 1, "", "to_json"], [54, 2, 1, "", "to_jsonstring"], [55, 2, 1, "", "validate_data"]], "compas_tno.optimisers": [[56, 1, 1, "", "Optimiser"]], "compas_tno.optimisers.Optimiser": [[57, 2, 1, "", "ToString"], [58, 2, 1, "", "clear_optimiser"], [59, 2, 1, "", "copy"], [60, 2, 1, "", "create_bestfit_optimiser"], [61, 2, 1, "", "create_compl_energy_optimiser"], [62, 2, 1, "", "create_lp_optimiser"], [63, 2, 1, "", "create_max_horload_optimiser"], [64, 2, 1, "", "create_max_vertload_optimiser"], [65, 2, 1, "", "create_maxthrust_optimiser"], [66, 2, 1, "", "create_minthk_optimiser"], [67, 2, 1, "", "create_minthrust_optimiser"], [68, 2, 1, "", "create_quad_compl_energy_optimiser"], [69, 2, 1, "", "from_json"], [70, 2, 1, "", "from_jsonstring"], [71, 2, 1, "", "set_axis_symmetry"], [72, 2, 1, "", "set_constraints"], [73, 2, 1, "", "set_display_options"], [74, 2, 1, "", "set_features"], [75, 2, 1, "", "set_gradient_options"], [76, 2, 1, "", "set_max_iterations"], [77, 2, 1, "", "set_objective"], [78, 2, 1, "", "set_optimiser_options"], [79, 2, 1, "", "set_solver"], [80, 2, 1, "", "set_starting_point"], [81, 2, 1, "", "set_variables"], [82, 2, 1, "", "sha256"], [83, 2, 1, "", "to_json"], [84, 2, 1, "", "to_jsonstring"], [85, 2, 1, "", "validate_data"]], "compas_tno.problems": [[86, 1, 1, "", "Problem"], [87, 0, 1, "", "adapt_problem_to_fixed_diagram"], [88, 0, 1, "", "adapt_problem_to_sym_and_fixed_diagram"], [89, 0, 1, "", "adapt_problem_to_sym_diagram"], [90, 0, 1, "", "apply_sym_to_form"], [91, 0, 1, "", "b_update"], [92, 0, 1, "", "callback_create_json"], [93, 0, 1, "", "callback_save_json"], [94, 0, 1, "", "compute_dQ"], [95, 0, 1, "", "constr_wrapper"], [96, 0, 1, "", "d_fconstr"], [97, 0, 1, "", "d_fobj"], [98, 0, 1, "", "db_update"], [99, 0, 1, "", "dub_dlb_update"], [100, 0, 1, "", "f_bestfit"], [101, 0, 1, "", "f_complementary_energy"], [102, 0, 1, "", "f_complementary_energy_nonlinear"], [103, 0, 1, "", "f_constant"], [104, 0, 1, "", "f_horprojection"], [105, 0, 1, "", "f_loadpath_general"], [106, 0, 1, "", "f_max_section"], [107, 0, 1, "", "f_max_thrust"], [108, 0, 1, "", "f_min_thrust"], [109, 0, 1, "", "f_reduce_thk"], [110, 0, 1, "", "f_tight_crosssection"], [111, 0, 1, "", "gradient_bestfit"], [112, 0, 1, "", "gradient_complementary_energy"], [113, 0, 1, "", "gradient_complementary_energy_nonlinear"], [114, 0, 1, "", "gradient_feasibility"], [115, 0, 1, "", "gradient_fmax"], [116, 0, 1, "", "gradient_fmin"], [117, 0, 1, "", "gradient_horprojection"], [118, 0, 1, "", "gradient_loadpath"], [119, 0, 1, "", "gradient_max_section"], [120, 0, 1, "", "gradient_reduce_thk"], [121, 0, 1, "", "gradient_tight_crosssection"], [122, 0, 1, "", "initialise_form"], [123, 0, 1, "", "initialise_problem_general"], [124, 0, 1, "", "objective_selector"], [125, 0, 1, "", "save_geometry_at_iterations"], [126, 0, 1, "", "sensitivities_wrapper"], [127, 0, 1, "", "set_up_convex_optimisation"], [128, 0, 1, "", "set_up_general_optimisation"], [129, 0, 1, "", "startingpoint_fdm"], [130, 0, 1, "", "startingpoint_loadpath"], [131, 0, 1, "", "startingpoint_sag"], [132, 0, 1, "", "startingpoint_tna"], [133, 0, 1, "", "ub_lb_update"]], "compas_tno.solvers": [[134, 0, 1, "", "call_and_output_CVXPY"], [135, 0, 1, "", "post_process_nlopt"], [136, 0, 1, "", "run_convex_optimisation"], [137, 0, 1, "", "run_loadpath_from_form_CVXPY"], [138, 0, 1, "", "run_nlopt_ipopt"], [139, 0, 1, "", "run_nlopt_scipy"]], "compas_tno.utilities": [[140, 0, 1, "", "apply_radial_symmetry"], [141, 0, 1, "", "apply_symmetry_from_axis"], [142, 0, 1, "", "assign_cracks"], [143, 0, 1, "", "build_symmetry_matrix"], [144, 0, 1, "", "build_symmetry_matrix_supports"], [145, 0, 1, "", "build_symmetry_transformation"], [146, 0, 1, "", "build_vertex_symmetry_transformation"], [147, 0, 1, "", "check_envelope_constraints"], [148, 0, 1, "", "compute_average_edge_stiffness"], [149, 0, 1, "", "compute_edge_stiffness"], [150, 0, 1, "", "compute_form_initial_lengths"], [151, 0, 1, "", "create_mesh_from_topology_and_basemesh"], [152, 0, 1, "", "create_mesh_from_topology_and_pointcloud"], [153, 0, 1, "", "displacement_map_4parabolas"], [154, 0, 1, "", "displacement_map_parabola"], [155, 0, 1, "", "displacement_map_paraboloid"], [156, 0, 1, "", "distance_target"], [157, 0, 1, "", "find_sym_axis_in_rect_patterns"], [158, 0, 1, "", "fix_mesh_boundary"], [159, 0, 1, "", "fix_mesh_corners"], [160, 0, 1, "", "form_add_lines_support"], [161, 0, 1, "", "form_parabolic_slide"], [162, 0, 1, "", "interpolate_from_pointcloud"], [163, 0, 1, "", "mesh_from_pointcloud"], [164, 0, 1, "", "mesh_remove_two_valent_nodes"], [165, 0, 1, "", "move_pattern_inwards"], [166, 0, 1, "", "move_pattern_outwards"], [167, 0, 1, "", "move_pattern_to_origin"], [168, 0, 1, "", "rectangular_smoothing_constraints"], [169, 0, 1, "", "rollers_on_openings"], [170, 0, 1, "", "set_b_constraint"], [171, 0, 1, "", "set_rollers_constraint"], [172, 0, 1, "", "shuffle_diagram"], [173, 0, 1, "", "slide_diagram"], [174, 0, 1, "", "slide_pattern_inwards"], [175, 0, 1, "", "split_intersection_lines"], [176, 0, 1, "", "store_inds"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "compas_tno": [1, 2, 3, 4, 5, 6, 7, 187], "algorithm": 2, "equilibrium": 2, "independ": 2, "analysi": [3, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 195], "class": [3, 4, 5], "optimis": [4, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 194], "problem": [5, 86], "initialis": 5, "start": [5, 184, 194], "point": [5, 194], "set": 5, "up": 5, "object": [5, 194, 195], "deriv": 5, "constraint": [5, 7, 194], "gradient": 5, "jacobian": 5, "bound": 5, "updat": 5, "callback": 5, "solver": [6, 185, 194], "scipi": 6, "ipopt": [6, 185], "cvxpy": 6, "post": 6, "process": 6, "util": 7, "symmetri": 7, "interpol": 7, "stiff": 7, "form": 7, "modif": 7, "check_horizontal_load": 8, "check_independ": 9, "compute_react": 10, "equilibrium_fdm": 11, "equilibrium_residu": 12, "find_independ": 13, "find_independents_qr": 14, "find_independents_backward": 15, "find_independents_forward": 16, "independents_exclud": 17, "independents_includ": 18, "inds_incl_excl": 19, "q_from_qid": 20, "q_from_vari": 21, "vertical_equilibrium_fdm": 22, "weights_from_xyz": 23, "weights_from_xyz_dict": 24, "xyz_from_q": 25, "xyz_from_xopt": 26, "tostr": [28, 57], "apply_crack": 29, "apply_envelop": 30, "apply_envelope_on_xi": 31, "apply_hor_multipli": 32, "apply_reaction_bound": 33, "apply_selfweight": 34, "apply_target": 35, "clear_previous_result": 36, "copi": [37, 59], "create_bestfit_analysi": 38, "create_compl_energy_analysi": 39, "create_lp_analysi": 40, "create_max_load_analysi": 41, "create_maxthrust_analysi": 42, "create_minthk_analysi": 43, "create_minthrust_analysi": 44, "create_quad_compl_energy_analysi": 45, "from_json": [46, 69], "from_jsonstr": [47, 70], "is_convex": 48, "run": 49, "set_optimiser_opt": [50, 78], "set_up_optimis": 51, "sha256": [52, 82], "to_json": [53, 83], "to_jsonstr": [54, 84], "validate_data": [55, 85], "clear_optimis": 58, "create_bestfit_optimis": 60, "create_compl_energy_optimis": 61, "create_lp_optimis": 62, "create_max_horload_optimis": 63, "create_max_vertload_optimis": 64, "create_maxthrust_optimis": 65, "create_minthk_optimis": 66, "create_minthrust_optimis": 67, "create_quad_compl_energy_optimis": 68, "set_axis_symmetri": 71, "set_constraint": 72, "set_display_opt": 73, "set_featur": 74, "set_gradient_opt": 75, "set_max_iter": 76, "set_object": 77, "set_solv": 79, "set_starting_point": 80, "set_vari": 81, "adapt_problem_to_fixed_diagram": 87, "adapt_problem_to_sym_and_fixed_diagram": 88, "adapt_problem_to_sym_diagram": 89, "apply_sym_to_form": 90, "b_updat": 91, "callback_create_json": 92, "callback_save_json": 93, "compute_dq": 94, "constr_wrapp": 95, "d_fconstr": 96, "d_fobj": 97, "db_updat": 98, "dub_dlb_upd": 99, "f_bestfit": 100, "f_complementary_energi": 101, "f_complementary_energy_nonlinear": 102, "f_constant": 103, "f_horproject": 104, "f_loadpath_gener": 105, "f_max_sect": 106, "f_max_thrust": 107, "f_min_thrust": 108, "f_reduce_thk": 109, "f_tight_crosssect": 110, "gradient_bestfit": 111, "gradient_complementary_energi": 112, "gradient_complementary_energy_nonlinear": 113, "gradient_feas": 114, "gradient_fmax": 115, "gradient_fmin": 116, "gradient_horproject": 117, "gradient_loadpath": 118, "gradient_max_sect": 119, "gradient_reduce_thk": 120, "gradient_tight_crosssect": 121, "initialise_form": 122, "initialise_problem_gener": 123, "objective_selector": 124, "save_geometry_at_iter": 125, "sensitivities_wrapp": 126, "set_up_convex_optimis": 127, "set_up_general_optimis": 128, "startingpoint_fdm": 129, "startingpoint_loadpath": 130, "startingpoint_sag": 131, "startingpoint_tna": 132, "ub_lb_upd": 133, "call_and_output_cvxpi": 134, "post_process_nlopt": 135, "run_convex_optimis": 136, "run_loadpath_from_form_cvxpi": 137, "run_nlopt_ipopt": 138, "run_nlopt_scipi": 139, "apply_radial_symmetri": 140, "apply_symmetry_from_axi": 141, "assign_crack": 142, "build_symmetry_matrix": 143, "build_symmetry_matrix_support": 144, "build_symmetry_transform": 145, "build_vertex_symmetry_transform": 146, "check_envelope_constraint": 147, "compute_average_edge_stiff": 148, "compute_edge_stiff": 149, "compute_form_initial_length": 150, "create_mesh_from_topology_and_basemesh": 151, "create_mesh_from_topology_and_pointcloud": 152, "displacement_map_4parabola": 153, "displacement_map_parabola": 154, "displacement_map_paraboloid": 155, "distance_target": 156, "find_sym_axis_in_rect_pattern": 157, "fix_mesh_boundari": 158, "fix_mesh_corn": 159, "form_add_lines_support": 160, "form_parabolic_slid": 161, "interpolate_from_pointcloud": 162, "mesh_from_pointcloud": 163, "mesh_remove_two_valent_nod": 164, "move_pattern_inward": 165, "move_pattern_outward": 166, "move_pattern_to_origin": 167, "rectangular_smoothing_constraint": 168, "rollers_on_open": 169, "set_b_constraint": 170, "set_rollers_constraint": 171, "shuffle_diagram": 172, "slide_diagram": 173, "slide_pattern_inward": 174, "split_intersection_lin": 175, "store_ind": 176, "exampl": 177, "cross": [178, 179, 183], "vault": [178, 179, 183], "min": [178, 181], "max": 178, "thrust": [178, 180, 195], "new": 179, "diagram": [179, 192], "dome": 180, "minimum": [180, 195], "crossvault": [181, 182], "thick": 181, "subject": 182, "settlement": 182, "collaps": 183, "load": 183, "get": 184, "loadpath": 185, "mosek": 185, "addit": 185, "introduct": 186, "acknowleg": 186, "tabl": 186, "content": 186, "instal": 187, "creat": [187, 195], "conda": 187, "environ": 187, "standalon": 187, "viewer": [187, 193], "licens": 188, "public": 189, "tutori": 190, "datastructur": 190, "step": 190, "workflow": 191, "formdiagram": 192, "librari": 192, "envelop": 193, "parametr": 193, "masonri": 193, "variabl": 194, "featur": 194, "select": 194, "autom": 194, "an": 195, "main": 195, "method": 195, "disclaim": 195, "about": 195, "solut": 195}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "compas_tno": [[1, "compas-tno"]], "compas_tno.algorithms": [[2, "compas-tno-algorithms"]], "Equilibrium": [[2, "equilibrium"]], "Independents": [[2, "independents"]], "compas_tno.analysis": [[3, "compas-tno-analysis"]], "Classes": [[3, "classes"], [4, "classes"], [5, "classes"]], "compas_tno.optimisers": [[4, "compas-tno-optimisers"]], "compas_tno.problems": [[5, "compas-tno-problems"]], "Initialisation": [[5, "initialisation"]], "Starting Points": [[5, "starting-points"]], "Set up": [[5, "set-up"]], "Objectives": [[5, "objectives"], [194, "objectives"]], "Derivatives": [[5, "derivatives"]], "Constraints": [[5, "constraints"], [7, "constraints"], [194, "constraints"]], "Gradients": [[5, "gradients"]], "Jacobian": [[5, "jacobian"]], "Bounds Update": [[5, "bounds-update"]], "Callbacks": [[5, "callbacks"]], "compas_tno.solvers": [[6, "compas-tno-solvers"]], "Scipy": [[6, "scipy"]], "IPOPT": [[6, "ipopt"], [185, "ipopt"]], "CVXPY": [[6, "cvxpy"]], "Post Processing": [[6, "post-processing"]], "compas_tno.utilities": [[7, "compas-tno-utilities"]], "Symmetry": [[7, "symmetry"]], "Interpolation": [[7, "interpolation"]], "Stiffness": [[7, "stiffness"]], "Form Modifications": [[7, "form-modifications"]], "check_horizontal_loads": [[8, "check-horizontal-loads"]], "check_independents": [[9, "check-independents"]], "compute_reactions": [[10, "compute-reactions"]], "equilibrium_fdm": [[11, "equilibrium-fdm"]], "equilibrium_residual": [[12, "equilibrium-residual"]], "find_independents": [[13, "find-independents"]], "find_independents_QR": [[14, "find-independents-qr"]], "find_independents_backward": [[15, "find-independents-backward"]], "find_independents_forward": [[16, "find-independents-forward"]], "independents_exclude": [[17, "independents-exclude"]], "independents_include": [[18, "independents-include"]], "inds_incl_excl": [[19, "inds-incl-excl"]], "q_from_qid": [[20, "q-from-qid"]], "q_from_variables": [[21, "q-from-variables"]], "vertical_equilibrium_fdm": [[22, "vertical-equilibrium-fdm"]], "weights_from_xyz": [[23, "weights-from-xyz"]], "weights_from_xyz_dict": [[24, "weights-from-xyz-dict"]], "xyz_from_q": [[25, "xyz-from-q"]], "xyz_from_xopt": [[26, "xyz-from-xopt"]], "Analysis": [[27, "analysis"], [195, "analysis"]], "Analysis.ToString": [[28, "analysis-tostring"]], "Analysis.apply_cracks": [[29, "analysis-apply-cracks"]], "Analysis.apply_envelope": [[30, "analysis-apply-envelope"]], "Analysis.apply_envelope_on_xy": [[31, "analysis-apply-envelope-on-xy"]], "Analysis.apply_hor_multiplier": [[32, "analysis-apply-hor-multiplier"]], "Analysis.apply_reaction_bounds": [[33, "analysis-apply-reaction-bounds"]], "Analysis.apply_selfweight": [[34, "analysis-apply-selfweight"]], "Analysis.apply_target": [[35, "analysis-apply-target"]], "Analysis.clear_previous_results": [[36, "analysis-clear-previous-results"]], "Analysis.copy": [[37, "analysis-copy"]], "Analysis.create_bestfit_analysis": [[38, "analysis-create-bestfit-analysis"]], "Analysis.create_compl_energy_analysis": [[39, "analysis-create-compl-energy-analysis"]], "Analysis.create_lp_analysis": [[40, "analysis-create-lp-analysis"]], "Analysis.create_max_load_analysis": [[41, "analysis-create-max-load-analysis"]], "Analysis.create_maxthrust_analysis": [[42, "analysis-create-maxthrust-analysis"]], "Analysis.create_minthk_analysis": [[43, "analysis-create-minthk-analysis"]], "Analysis.create_minthrust_analysis": [[44, "analysis-create-minthrust-analysis"]], "Analysis.create_quad_compl_energy_analysis": [[45, "analysis-create-quad-compl-energy-analysis"]], "Analysis.from_json": [[46, "analysis-from-json"]], "Analysis.from_jsonstring": [[47, "analysis-from-jsonstring"]], "Analysis.is_convex": [[48, "analysis-is-convex"]], "Analysis.run": [[49, "analysis-run"]], "Analysis.set_optimiser_options": [[50, "analysis-set-optimiser-options"]], "Analysis.set_up_optimiser": [[51, "analysis-set-up-optimiser"]], "Analysis.sha256": [[52, "analysis-sha256"]], "Analysis.to_json": [[53, "analysis-to-json"]], "Analysis.to_jsonstring": [[54, "analysis-to-jsonstring"]], "Analysis.validate_data": [[55, "analysis-validate-data"]], "Optimiser": [[56, "optimiser"], [194, "optimiser"]], "Optimiser.ToString": [[57, "optimiser-tostring"]], "Optimiser.clear_optimiser": [[58, "optimiser-clear-optimiser"]], "Optimiser.copy": [[59, "optimiser-copy"]], "Optimiser.create_bestfit_optimiser": [[60, "optimiser-create-bestfit-optimiser"]], "Optimiser.create_compl_energy_optimiser": [[61, "optimiser-create-compl-energy-optimiser"]], "Optimiser.create_lp_optimiser": [[62, "optimiser-create-lp-optimiser"]], "Optimiser.create_max_horload_optimiser": [[63, "optimiser-create-max-horload-optimiser"]], "Optimiser.create_max_vertload_optimiser": [[64, "optimiser-create-max-vertload-optimiser"]], "Optimiser.create_maxthrust_optimiser": [[65, "optimiser-create-maxthrust-optimiser"]], "Optimiser.create_minthk_optimiser": [[66, "optimiser-create-minthk-optimiser"]], "Optimiser.create_minthrust_optimiser": [[67, "optimiser-create-minthrust-optimiser"]], "Optimiser.create_quad_compl_energy_optimiser": [[68, "optimiser-create-quad-compl-energy-optimiser"]], "Optimiser.from_json": [[69, "optimiser-from-json"]], "Optimiser.from_jsonstring": [[70, "optimiser-from-jsonstring"]], "Optimiser.set_axis_symmetry": [[71, "optimiser-set-axis-symmetry"]], "Optimiser.set_constraints": [[72, "optimiser-set-constraints"]], "Optimiser.set_display_options": [[73, "optimiser-set-display-options"]], "Optimiser.set_features": [[74, "optimiser-set-features"]], "Optimiser.set_gradient_options": [[75, "optimiser-set-gradient-options"]], "Optimiser.set_max_iterations": [[76, "optimiser-set-max-iterations"]], "Optimiser.set_objective": [[77, "optimiser-set-objective"]], "Optimiser.set_optimiser_options": [[78, "optimiser-set-optimiser-options"]], "Optimiser.set_solver": [[79, "optimiser-set-solver"]], "Optimiser.set_starting_point": [[80, "optimiser-set-starting-point"]], "Optimiser.set_variables": [[81, "optimiser-set-variables"]], "Optimiser.sha256": [[82, "optimiser-sha256"]], "Optimiser.to_json": [[83, "optimiser-to-json"]], "Optimiser.to_jsonstring": [[84, "optimiser-to-jsonstring"]], "Optimiser.validate_data": [[85, "optimiser-validate-data"]], "Problem": [[86, "problem"]], "adapt_problem_to_fixed_diagram": [[87, "adapt-problem-to-fixed-diagram"]], "adapt_problem_to_sym_and_fixed_diagram": [[88, "adapt-problem-to-sym-and-fixed-diagram"]], "adapt_problem_to_sym_diagram": [[89, "adapt-problem-to-sym-diagram"]], "apply_sym_to_form": [[90, "apply-sym-to-form"]], "b_update": [[91, "b-update"]], "callback_create_json": [[92, "callback-create-json"]], "callback_save_json": [[93, "callback-save-json"]], "compute_dQ": [[94, "compute-dq"]], "constr_wrapper": [[95, "constr-wrapper"]], "d_fconstr": [[96, "d-fconstr"]], "d_fobj": [[97, "d-fobj"]], "db_update": [[98, "db-update"]], "dub_dlb_update": [[99, "dub-dlb-update"]], "f_bestfit": [[100, "f-bestfit"]], "f_complementary_energy": [[101, "f-complementary-energy"]], "f_complementary_energy_nonlinear": [[102, "f-complementary-energy-nonlinear"]], "f_constant": [[103, "f-constant"]], "f_horprojection": [[104, "f-horprojection"]], "f_loadpath_general": [[105, "f-loadpath-general"]], "f_max_section": [[106, "f-max-section"]], "f_max_thrust": [[107, "f-max-thrust"]], "f_min_thrust": [[108, "f-min-thrust"]], "f_reduce_thk": [[109, "f-reduce-thk"]], "f_tight_crosssection": [[110, "f-tight-crosssection"]], "gradient_bestfit": [[111, "gradient-bestfit"]], "gradient_complementary_energy": [[112, "gradient-complementary-energy"]], "gradient_complementary_energy_nonlinear": [[113, "gradient-complementary-energy-nonlinear"]], "gradient_feasibility": [[114, "gradient-feasibility"]], "gradient_fmax": [[115, "gradient-fmax"]], "gradient_fmin": [[116, "gradient-fmin"]], "gradient_horprojection": [[117, "gradient-horprojection"]], "gradient_loadpath": [[118, "gradient-loadpath"]], "gradient_max_section": [[119, "gradient-max-section"]], "gradient_reduce_thk": [[120, "gradient-reduce-thk"]], "gradient_tight_crosssection": [[121, "gradient-tight-crosssection"]], "initialise_form": [[122, "initialise-form"]], "initialise_problem_general": [[123, "initialise-problem-general"]], "objective_selector": [[124, "objective-selector"]], "save_geometry_at_iterations": [[125, "save-geometry-at-iterations"]], "sensitivities_wrapper": [[126, "sensitivities-wrapper"]], "set_up_convex_optimisation": [[127, "set-up-convex-optimisation"]], "set_up_general_optimisation": [[128, "set-up-general-optimisation"]], "startingpoint_fdm": [[129, "startingpoint-fdm"]], "startingpoint_loadpath": [[130, "startingpoint-loadpath"]], "startingpoint_sag": [[131, "startingpoint-sag"]], "startingpoint_tna": [[132, "startingpoint-tna"]], "ub_lb_update": [[133, "ub-lb-update"]], "call_and_output_CVXPY": [[134, "call-and-output-cvxpy"]], "post_process_nlopt": [[135, "post-process-nlopt"]], "run_convex_optimisation": [[136, "run-convex-optimisation"]], "run_loadpath_from_form_CVXPY": [[137, "run-loadpath-from-form-cvxpy"]], "run_nlopt_ipopt": [[138, "run-nlopt-ipopt"]], "run_nlopt_scipy": [[139, "run-nlopt-scipy"]], "apply_radial_symmetry": [[140, "apply-radial-symmetry"]], "apply_symmetry_from_axis": [[141, "apply-symmetry-from-axis"]], "assign_cracks": [[142, "assign-cracks"]], "build_symmetry_matrix": [[143, "build-symmetry-matrix"]], "build_symmetry_matrix_supports": [[144, "build-symmetry-matrix-supports"]], "build_symmetry_transformation": [[145, "build-symmetry-transformation"]], "build_vertex_symmetry_transformation": [[146, "build-vertex-symmetry-transformation"]], "check_envelope_constraints": [[147, "check-envelope-constraints"]], "compute_average_edge_stiffness": [[148, "compute-average-edge-stiffness"]], "compute_edge_stiffness": [[149, "compute-edge-stiffness"]], "compute_form_initial_lengths": [[150, "compute-form-initial-lengths"]], "create_mesh_from_topology_and_basemesh": [[151, "create-mesh-from-topology-and-basemesh"]], "create_mesh_from_topology_and_pointcloud": [[152, "create-mesh-from-topology-and-pointcloud"]], "displacement_map_4parabolas": [[153, "displacement-map-4parabolas"]], "displacement_map_parabola": [[154, "displacement-map-parabola"]], "displacement_map_paraboloid": [[155, "displacement-map-paraboloid"]], "distance_target": [[156, "distance-target"]], "find_sym_axis_in_rect_patterns": [[157, "find-sym-axis-in-rect-patterns"]], "fix_mesh_boundary": [[158, "fix-mesh-boundary"]], "fix_mesh_corners": [[159, "fix-mesh-corners"]], "form_add_lines_support": [[160, "form-add-lines-support"]], "form_parabolic_slide": [[161, "form-parabolic-slide"]], "interpolate_from_pointcloud": [[162, "interpolate-from-pointcloud"]], "mesh_from_pointcloud": [[163, "mesh-from-pointcloud"]], "mesh_remove_two_valent_nodes": [[164, "mesh-remove-two-valent-nodes"]], "move_pattern_inwards": [[165, "move-pattern-inwards"]], "move_pattern_outwards": [[166, "move-pattern-outwards"]], "move_pattern_to_origin": [[167, "move-pattern-to-origin"]], "rectangular_smoothing_constraints": [[168, "rectangular-smoothing-constraints"]], "rollers_on_openings": [[169, "rollers-on-openings"]], "set_b_constraint": [[170, "set-b-constraint"]], "set_rollers_constraint": [[171, "set-rollers-constraint"]], "shuffle_diagram": [[172, "shuffle-diagram"]], "slide_diagram": [[173, "slide-diagram"]], "slide_pattern_inwards": [[174, "slide-pattern-inwards"]], "split_intersection_lines": [[175, "split-intersection-lines"]], "store_inds": [[176, "store-inds"]], "Examples": [[177, "examples"]], "Cross vault min/max thrust": [[178, "cross-vault-min-max-thrust"]], "Cross vault new diagram": [[179, "cross-vault-new-diagram"]], "Dome minimum thrust": [[180, "dome-minimum-thrust"]], "CrossVault min thickness": [[181, "crossvault-min-thickness"]], "CrossVault subjected to settlement": [[182, "crossvault-subjected-to-settlement"]], "Cross vault collapse load": [[183, "cross-vault-collapse-load"]], "Getting Started": [[184, "getting-started"]], "Solvers": [[185, "solvers"]], "Loadpath solvers": [[185, "loadpath-solvers"]], "MOSEK": [[185, "mosek"]], "Additional solvers": [[185, "additional-solvers"]], "Introduction": [[186, "introduction"]], "Acknowlegments": [[186, "acknowlegments"]], "Table of Contents": [[186, "table-of-contents"]], "Installation": [[187, "installation"]], "Create a conda environment": [[187, "create-a-conda-environment"]], "Installing compas_tno": [[187, "installing-compas-tno"]], "Standalone viewer": [[187, "standalone-viewer"]], "License": [[188, "license"]], "Publications": [[189, "publications"]], "Tutorial": [[190, "tutorial"]], "Datastructure": [[190, "datastructure"]], "Steps of the tutorial": [[190, "steps-of-the-tutorial"]], "Workflow": [[191, "workflow"]], "FormDiagram": [[192, "formdiagram"]], "Diagrams Library": [[192, "diagrams-library"]], "Envelope": [[193, "envelope"]], "Parametric Envelopes": [[193, "parametric-envelopes"]], "Masonry Viewer": [[193, "masonry-viewer"]], "Variables": [[194, "variables"]], "Features": [[194, "features"]], "Solver Selection": [[194, "solver-selection"]], "Starting Point": [[194, "starting-point"]], "Automated Optimisers": [[194, "automated-optimisers"]], "Creating an Analysis object": [[195, "creating-an-analysis-object"]], "Main Analysis Methods": [[195, "main-analysis-methods"]], "Create a minimum thrust analysis": [[195, "create-a-minimum-thrust-analysis"]], "Disclaimer about the solution": [[195, "disclaimer-about-the-solution"]]}, "indexentries": {"check_horizontal_loads() (in module compas_tno.algorithms)": [[8, "compas_tno.algorithms.check_horizontal_loads"]], "check_independents() (in module compas_tno.algorithms)": [[9, "compas_tno.algorithms.check_independents"]], "compute_reactions() (in module compas_tno.algorithms)": [[10, "compas_tno.algorithms.compute_reactions"]], "equilibrium_fdm() (in module compas_tno.algorithms)": [[11, "compas_tno.algorithms.equilibrium_fdm"]], "equilibrium_residual() (in module compas_tno.algorithms)": [[12, "compas_tno.algorithms.equilibrium_residual"]], "find_independents() (in module compas_tno.algorithms)": [[13, "compas_tno.algorithms.find_independents"]], "find_independents_qr() (in module compas_tno.algorithms)": [[14, "compas_tno.algorithms.find_independents_QR"]], "find_independents_backward() (in module compas_tno.algorithms)": [[15, "compas_tno.algorithms.find_independents_backward"]], "find_independents_forward() (in module compas_tno.algorithms)": [[16, "compas_tno.algorithms.find_independents_forward"]], "independents_exclude() (in module compas_tno.algorithms)": [[17, "compas_tno.algorithms.independents_exclude"]], "independents_include() (in module compas_tno.algorithms)": [[18, "compas_tno.algorithms.independents_include"]], "inds_incl_excl() (in module compas_tno.algorithms)": [[19, "compas_tno.algorithms.inds_incl_excl"]], "q_from_qid() (in module compas_tno.algorithms)": [[20, "compas_tno.algorithms.q_from_qid"]], "q_from_variables() (in module compas_tno.algorithms)": [[21, "compas_tno.algorithms.q_from_variables"]], "vertical_equilibrium_fdm() (in module compas_tno.algorithms)": [[22, "compas_tno.algorithms.vertical_equilibrium_fdm"]], "weights_from_xyz() (in module compas_tno.algorithms)": [[23, "compas_tno.algorithms.weights_from_xyz"]], "weights_from_xyz_dict() (in module compas_tno.algorithms)": [[24, "compas_tno.algorithms.weights_from_xyz_dict"]], "xyz_from_q() (in module compas_tno.algorithms)": [[25, "compas_tno.algorithms.xyz_from_q"]], "xyz_from_xopt() (in module compas_tno.algorithms)": [[26, "compas_tno.algorithms.xyz_from_xopt"]], "analysis (class in compas_tno.analysis)": [[27, "compas_tno.analysis.Analysis"]], "tostring() (compas_tno.analysis.analysis method)": [[28, "compas_tno.analysis.Analysis.ToString"]], "apply_cracks() (compas_tno.analysis.analysis method)": [[29, "compas_tno.analysis.Analysis.apply_cracks"]], "apply_envelope() (compas_tno.analysis.analysis method)": [[30, "compas_tno.analysis.Analysis.apply_envelope"]], "apply_envelope_on_xy() (compas_tno.analysis.analysis method)": [[31, "compas_tno.analysis.Analysis.apply_envelope_on_xy"]], "apply_hor_multiplier() (compas_tno.analysis.analysis method)": [[32, "compas_tno.analysis.Analysis.apply_hor_multiplier"]], "apply_reaction_bounds() (compas_tno.analysis.analysis method)": [[33, "compas_tno.analysis.Analysis.apply_reaction_bounds"]], "apply_selfweight() (compas_tno.analysis.analysis method)": [[34, "compas_tno.analysis.Analysis.apply_selfweight"]], "apply_target() (compas_tno.analysis.analysis method)": [[35, "compas_tno.analysis.Analysis.apply_target"]], "clear_previous_results() (compas_tno.analysis.analysis method)": [[36, "compas_tno.analysis.Analysis.clear_previous_results"]], "copy() (compas_tno.analysis.analysis method)": [[37, "compas_tno.analysis.Analysis.copy"]], "create_bestfit_analysis() (compas_tno.analysis.analysis class method)": [[38, "compas_tno.analysis.Analysis.create_bestfit_analysis"]], "create_compl_energy_analysis() (compas_tno.analysis.analysis class method)": [[39, "compas_tno.analysis.Analysis.create_compl_energy_analysis"]], "create_lp_analysis() (compas_tno.analysis.analysis class method)": [[40, "compas_tno.analysis.Analysis.create_lp_analysis"]], "create_max_load_analysis() (compas_tno.analysis.analysis class method)": [[41, "compas_tno.analysis.Analysis.create_max_load_analysis"]], "create_maxthrust_analysis() (compas_tno.analysis.analysis class method)": [[42, "compas_tno.analysis.Analysis.create_maxthrust_analysis"]], "create_minthk_analysis() (compas_tno.analysis.analysis class method)": [[43, "compas_tno.analysis.Analysis.create_minthk_analysis"]], "create_minthrust_analysis() (compas_tno.analysis.analysis class method)": [[44, "compas_tno.analysis.Analysis.create_minthrust_analysis"]], "create_quad_compl_energy_analysis() (compas_tno.analysis.analysis class method)": [[45, "compas_tno.analysis.Analysis.create_quad_compl_energy_analysis"]], "from_json() (compas_tno.analysis.analysis class method)": [[46, "compas_tno.analysis.Analysis.from_json"]], "from_jsonstring() (compas_tno.analysis.analysis class method)": [[47, "compas_tno.analysis.Analysis.from_jsonstring"]], "is_convex() (compas_tno.analysis.analysis method)": [[48, "compas_tno.analysis.Analysis.is_convex"]], "run() (compas_tno.analysis.analysis method)": [[49, "compas_tno.analysis.Analysis.run"]], "set_optimiser_options() (compas_tno.analysis.analysis method)": [[50, "compas_tno.analysis.Analysis.set_optimiser_options"]], "set_up_optimiser() (compas_tno.analysis.analysis method)": [[51, "compas_tno.analysis.Analysis.set_up_optimiser"]], "sha256() (compas_tno.analysis.analysis method)": [[52, "compas_tno.analysis.Analysis.sha256"]], "to_json() (compas_tno.analysis.analysis method)": [[53, "compas_tno.analysis.Analysis.to_json"]], "to_jsonstring() (compas_tno.analysis.analysis method)": [[54, "compas_tno.analysis.Analysis.to_jsonstring"]], "validate_data() (compas_tno.analysis.analysis class method)": [[55, "compas_tno.analysis.Analysis.validate_data"]], "optimiser (class in compas_tno.optimisers)": [[56, "compas_tno.optimisers.Optimiser"]], "tostring() (compas_tno.optimisers.optimiser method)": [[57, "compas_tno.optimisers.Optimiser.ToString"]], "clear_optimiser() (compas_tno.optimisers.optimiser method)": [[58, "compas_tno.optimisers.Optimiser.clear_optimiser"]], "copy() (compas_tno.optimisers.optimiser method)": [[59, "compas_tno.optimisers.Optimiser.copy"]], "create_bestfit_optimiser() (compas_tno.optimisers.optimiser class method)": [[60, "compas_tno.optimisers.Optimiser.create_bestfit_optimiser"]], "create_compl_energy_optimiser() (compas_tno.optimisers.optimiser class method)": [[61, "compas_tno.optimisers.Optimiser.create_compl_energy_optimiser"]], "create_lp_optimiser() (compas_tno.optimisers.optimiser class method)": [[62, "compas_tno.optimisers.Optimiser.create_lp_optimiser"]], "create_max_horload_optimiser() (compas_tno.optimisers.optimiser class method)": [[63, "compas_tno.optimisers.Optimiser.create_max_horload_optimiser"]], "create_max_vertload_optimiser() (compas_tno.optimisers.optimiser class method)": [[64, "compas_tno.optimisers.Optimiser.create_max_vertload_optimiser"]], "create_maxthrust_optimiser() (compas_tno.optimisers.optimiser class method)": [[65, "compas_tno.optimisers.Optimiser.create_maxthrust_optimiser"]], "create_minthk_optimiser() (compas_tno.optimisers.optimiser class method)": [[66, "compas_tno.optimisers.Optimiser.create_minthk_optimiser"]], "create_minthrust_optimiser() (compas_tno.optimisers.optimiser class method)": [[67, "compas_tno.optimisers.Optimiser.create_minthrust_optimiser"]], "create_quad_compl_energy_optimiser() (compas_tno.optimisers.optimiser class method)": [[68, "compas_tno.optimisers.Optimiser.create_quad_compl_energy_optimiser"]], "from_json() (compas_tno.optimisers.optimiser class method)": [[69, "compas_tno.optimisers.Optimiser.from_json"]], "from_jsonstring() (compas_tno.optimisers.optimiser class method)": [[70, "compas_tno.optimisers.Optimiser.from_jsonstring"]], "set_axis_symmetry() (compas_tno.optimisers.optimiser method)": [[71, "compas_tno.optimisers.Optimiser.set_axis_symmetry"]], "set_constraints() (compas_tno.optimisers.optimiser method)": [[72, "compas_tno.optimisers.Optimiser.set_constraints"]], "set_display_options() (compas_tno.optimisers.optimiser method)": [[73, "compas_tno.optimisers.Optimiser.set_display_options"]], "set_features() (compas_tno.optimisers.optimiser method)": [[74, "compas_tno.optimisers.Optimiser.set_features"]], "set_gradient_options() (compas_tno.optimisers.optimiser method)": [[75, "compas_tno.optimisers.Optimiser.set_gradient_options"]], "set_max_iterations() (compas_tno.optimisers.optimiser method)": [[76, "compas_tno.optimisers.Optimiser.set_max_iterations"]], "set_objective() (compas_tno.optimisers.optimiser method)": [[77, "compas_tno.optimisers.Optimiser.set_objective"]], "set_optimiser_options() (compas_tno.optimisers.optimiser method)": [[78, "compas_tno.optimisers.Optimiser.set_optimiser_options"]], "set_solver() (compas_tno.optimisers.optimiser method)": [[79, "compas_tno.optimisers.Optimiser.set_solver"]], "set_starting_point() (compas_tno.optimisers.optimiser method)": [[80, "compas_tno.optimisers.Optimiser.set_starting_point"]], "set_variables() (compas_tno.optimisers.optimiser method)": [[81, "compas_tno.optimisers.Optimiser.set_variables"]], "sha256() (compas_tno.optimisers.optimiser method)": [[82, "compas_tno.optimisers.Optimiser.sha256"]], "to_json() (compas_tno.optimisers.optimiser method)": [[83, "compas_tno.optimisers.Optimiser.to_json"]], "to_jsonstring() (compas_tno.optimisers.optimiser method)": [[84, "compas_tno.optimisers.Optimiser.to_jsonstring"]], "validate_data() (compas_tno.optimisers.optimiser class method)": [[85, "compas_tno.optimisers.Optimiser.validate_data"]], "problem (class in compas_tno.problems)": [[86, "compas_tno.problems.Problem"]], "adapt_problem_to_fixed_diagram() (in module compas_tno.problems)": [[87, "compas_tno.problems.adapt_problem_to_fixed_diagram"]], "adapt_problem_to_sym_and_fixed_diagram() (in module compas_tno.problems)": [[88, "compas_tno.problems.adapt_problem_to_sym_and_fixed_diagram"]], "adapt_problem_to_sym_diagram() (in module compas_tno.problems)": [[89, "compas_tno.problems.adapt_problem_to_sym_diagram"]], "apply_sym_to_form() (in module compas_tno.problems)": [[90, "compas_tno.problems.apply_sym_to_form"]], "b_update() (in module compas_tno.problems)": [[91, "compas_tno.problems.b_update"]], "callback_create_json() (in module compas_tno.problems)": [[92, "compas_tno.problems.callback_create_json"]], "callback_save_json() (in module compas_tno.problems)": [[93, "compas_tno.problems.callback_save_json"]], "compute_dq() (in module compas_tno.problems)": [[94, "compas_tno.problems.compute_dQ"]], "constr_wrapper() (in module compas_tno.problems)": [[95, "compas_tno.problems.constr_wrapper"]], "d_fconstr() (in module compas_tno.problems)": [[96, "compas_tno.problems.d_fconstr"]], "d_fobj() (in module compas_tno.problems)": [[97, "compas_tno.problems.d_fobj"]], "db_update() (in module compas_tno.problems)": [[98, "compas_tno.problems.db_update"]], "dub_dlb_update() (in module compas_tno.problems)": [[99, "compas_tno.problems.dub_dlb_update"]], "f_bestfit() (in module compas_tno.problems)": [[100, "compas_tno.problems.f_bestfit"]], "f_complementary_energy() (in module compas_tno.problems)": [[101, "compas_tno.problems.f_complementary_energy"]], "f_complementary_energy_nonlinear() (in module compas_tno.problems)": [[102, "compas_tno.problems.f_complementary_energy_nonlinear"]], "f_constant() (in module compas_tno.problems)": [[103, "compas_tno.problems.f_constant"]], "f_horprojection() (in module compas_tno.problems)": [[104, "compas_tno.problems.f_horprojection"]], "f_loadpath_general() (in module compas_tno.problems)": [[105, "compas_tno.problems.f_loadpath_general"]], "f_max_section() (in module compas_tno.problems)": [[106, "compas_tno.problems.f_max_section"]], "f_max_thrust() (in module compas_tno.problems)": [[107, "compas_tno.problems.f_max_thrust"]], "f_min_thrust() (in module compas_tno.problems)": [[108, "compas_tno.problems.f_min_thrust"]], "f_reduce_thk() (in module compas_tno.problems)": [[109, "compas_tno.problems.f_reduce_thk"]], "f_tight_crosssection() (in module compas_tno.problems)": [[110, "compas_tno.problems.f_tight_crosssection"]], "gradient_bestfit() (in module compas_tno.problems)": [[111, "compas_tno.problems.gradient_bestfit"]], "gradient_complementary_energy() (in module compas_tno.problems)": [[112, "compas_tno.problems.gradient_complementary_energy"]], "gradient_complementary_energy_nonlinear() (in module compas_tno.problems)": [[113, "compas_tno.problems.gradient_complementary_energy_nonlinear"]], "gradient_feasibility() (in module compas_tno.problems)": [[114, "compas_tno.problems.gradient_feasibility"]], "gradient_fmax() (in module compas_tno.problems)": [[115, "compas_tno.problems.gradient_fmax"]], "gradient_fmin() (in module compas_tno.problems)": [[116, "compas_tno.problems.gradient_fmin"]], "gradient_horprojection() (in module compas_tno.problems)": [[117, "compas_tno.problems.gradient_horprojection"]], "gradient_loadpath() (in module compas_tno.problems)": [[118, "compas_tno.problems.gradient_loadpath"]], "gradient_max_section() (in module compas_tno.problems)": [[119, "compas_tno.problems.gradient_max_section"]], "gradient_reduce_thk() (in module compas_tno.problems)": [[120, "compas_tno.problems.gradient_reduce_thk"]], "gradient_tight_crosssection() (in module compas_tno.problems)": [[121, "compas_tno.problems.gradient_tight_crosssection"]], "initialise_form() (in module compas_tno.problems)": [[122, "compas_tno.problems.initialise_form"]], "initialise_problem_general() (in module compas_tno.problems)": [[123, "compas_tno.problems.initialise_problem_general"]], "objective_selector() (in module compas_tno.problems)": [[124, "compas_tno.problems.objective_selector"]], "save_geometry_at_iterations() (in module compas_tno.problems)": [[125, "compas_tno.problems.save_geometry_at_iterations"]], "sensitivities_wrapper() (in module compas_tno.problems)": [[126, "compas_tno.problems.sensitivities_wrapper"]], "set_up_convex_optimisation() (in module compas_tno.problems)": [[127, "compas_tno.problems.set_up_convex_optimisation"]], "set_up_general_optimisation() (in module compas_tno.problems)": [[128, "compas_tno.problems.set_up_general_optimisation"]], "startingpoint_fdm() (in module compas_tno.problems)": [[129, "compas_tno.problems.startingpoint_fdm"]], "startingpoint_loadpath() (in module compas_tno.problems)": [[130, "compas_tno.problems.startingpoint_loadpath"]], "startingpoint_sag() (in module compas_tno.problems)": [[131, "compas_tno.problems.startingpoint_sag"]], "startingpoint_tna() (in module compas_tno.problems)": [[132, "compas_tno.problems.startingpoint_tna"]], "ub_lb_update() (in module compas_tno.problems)": [[133, "compas_tno.problems.ub_lb_update"]], "call_and_output_cvxpy() (in module compas_tno.solvers)": [[134, "compas_tno.solvers.call_and_output_CVXPY"]], "post_process_nlopt() (in module compas_tno.solvers)": [[135, "compas_tno.solvers.post_process_nlopt"]], "run_convex_optimisation() (in module compas_tno.solvers)": [[136, "compas_tno.solvers.run_convex_optimisation"]], "run_loadpath_from_form_cvxpy() (in module compas_tno.solvers)": [[137, "compas_tno.solvers.run_loadpath_from_form_CVXPY"]], "run_nlopt_ipopt() (in module compas_tno.solvers)": [[138, "compas_tno.solvers.run_nlopt_ipopt"]], "run_nlopt_scipy() (in module compas_tno.solvers)": [[139, "compas_tno.solvers.run_nlopt_scipy"]], "apply_radial_symmetry() (in module compas_tno.utilities)": [[140, "compas_tno.utilities.apply_radial_symmetry"]], "apply_symmetry_from_axis() (in module compas_tno.utilities)": [[141, "compas_tno.utilities.apply_symmetry_from_axis"]], "assign_cracks() (in module compas_tno.utilities)": [[142, "compas_tno.utilities.assign_cracks"]], "build_symmetry_matrix() (in module compas_tno.utilities)": [[143, "compas_tno.utilities.build_symmetry_matrix"]], "build_symmetry_matrix_supports() (in module compas_tno.utilities)": [[144, "compas_tno.utilities.build_symmetry_matrix_supports"]], "build_symmetry_transformation() (in module compas_tno.utilities)": [[145, "compas_tno.utilities.build_symmetry_transformation"]], "build_vertex_symmetry_transformation() (in module compas_tno.utilities)": [[146, "compas_tno.utilities.build_vertex_symmetry_transformation"]], "check_envelope_constraints() (in module compas_tno.utilities)": [[147, "compas_tno.utilities.check_envelope_constraints"]], "compute_average_edge_stiffness() (in module compas_tno.utilities)": [[148, "compas_tno.utilities.compute_average_edge_stiffness"]], "compute_edge_stiffness() (in module compas_tno.utilities)": [[149, "compas_tno.utilities.compute_edge_stiffness"]], "compute_form_initial_lengths() (in module compas_tno.utilities)": [[150, "compas_tno.utilities.compute_form_initial_lengths"]], "create_mesh_from_topology_and_basemesh() (in module compas_tno.utilities)": [[151, "compas_tno.utilities.create_mesh_from_topology_and_basemesh"]], "create_mesh_from_topology_and_pointcloud() (in module compas_tno.utilities)": [[152, "compas_tno.utilities.create_mesh_from_topology_and_pointcloud"]], "displacement_map_4parabolas() (in module compas_tno.utilities)": [[153, "compas_tno.utilities.displacement_map_4parabolas"]], "displacement_map_parabola() (in module compas_tno.utilities)": [[154, "compas_tno.utilities.displacement_map_parabola"]], "displacement_map_paraboloid() (in module compas_tno.utilities)": [[155, "compas_tno.utilities.displacement_map_paraboloid"]], "distance_target() (in module compas_tno.utilities)": [[156, "compas_tno.utilities.distance_target"]], "find_sym_axis_in_rect_patterns() (in module compas_tno.utilities)": [[157, "compas_tno.utilities.find_sym_axis_in_rect_patterns"]], "fix_mesh_boundary() (in module compas_tno.utilities)": [[158, "compas_tno.utilities.fix_mesh_boundary"]], "fix_mesh_corners() (in module compas_tno.utilities)": [[159, "compas_tno.utilities.fix_mesh_corners"]], "form_add_lines_support() (in module compas_tno.utilities)": [[160, "compas_tno.utilities.form_add_lines_support"]], "form_parabolic_slide() (in module compas_tno.utilities)": [[161, "compas_tno.utilities.form_parabolic_slide"]], "interpolate_from_pointcloud() (in module compas_tno.utilities)": [[162, "compas_tno.utilities.interpolate_from_pointcloud"]], "mesh_from_pointcloud() (in module compas_tno.utilities)": [[163, "compas_tno.utilities.mesh_from_pointcloud"]], "mesh_remove_two_valent_nodes() (in module compas_tno.utilities)": [[164, "compas_tno.utilities.mesh_remove_two_valent_nodes"]], "move_pattern_inwards() (in module compas_tno.utilities)": [[165, "compas_tno.utilities.move_pattern_inwards"]], "move_pattern_outwards() (in module compas_tno.utilities)": [[166, "compas_tno.utilities.move_pattern_outwards"]], "move_pattern_to_origin() (in module compas_tno.utilities)": [[167, "compas_tno.utilities.move_pattern_to_origin"]], "rectangular_smoothing_constraints() (in module compas_tno.utilities)": [[168, "compas_tno.utilities.rectangular_smoothing_constraints"]], "rollers_on_openings() (in module compas_tno.utilities)": [[169, "compas_tno.utilities.rollers_on_openings"]], "set_b_constraint() (in module compas_tno.utilities)": [[170, "compas_tno.utilities.set_b_constraint"]], "set_rollers_constraint() (in module compas_tno.utilities)": [[171, "compas_tno.utilities.set_rollers_constraint"]], "shuffle_diagram() (in module compas_tno.utilities)": [[172, "compas_tno.utilities.shuffle_diagram"]], "slide_diagram() (in module compas_tno.utilities)": [[173, "compas_tno.utilities.slide_diagram"]], "slide_pattern_inwards() (in module compas_tno.utilities)": [[174, "compas_tno.utilities.slide_pattern_inwards"]], "split_intersection_lines() (in module compas_tno.utilities)": [[175, "compas_tno.utilities.split_intersection_lines"]], "store_inds() (in module compas_tno.utilities)": [[176, "compas_tno.utilities.store_inds"]]}})