[build-system]
requires = ["setuptools>=66.0"]
build-backend = "setuptools.build_meta"

# ============================================================================
# project info
# ============================================================================

[project]
name = "compas_tno"
description = "This package performs masonry assessment by menans of NLP with Funicular Thrust Networks."
keywords = []
authors = [{ name = "Ricardo Maia Avelino", email = "maia@arch.ethz.ch" }]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "compas>=1.17",
    "compas_tna",
    "compas_ags",
    "matplotlib",
    "cyipopt",
    "mosek",
    "torch",
]
dynamic = ['version']
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.urls]
Homepage = "https://blockresearchgroup.github.io/compas_tno"
Documentation = "https://blockresearchgroup.github.io/compas_tno"
Repository = "https://github.com/blockresearchgroup/compas_tno.git"
Changelog = "https://github.com/blockresearchgroup/compas_tno/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "attrs >=17.4",
    "black >=22.12.0",
    "bump-my-version",
    "compas_invocations2",
    "invoke >=0.14",
    "pydeps",
    "ruff",
    "sphinx_compas2_theme",
    "twine",
    "wheel",
]
standalone = [
    "compas_notebook",
    "compas_viewer",
]
all = [
    "compas_tno[dev]",
    "compas_tno[standalone]",
]

# ============================================================================
# setuptools config
# ============================================================================

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true
zip-safe = false

[tool.setuptools.dynamic]
version = { attr = "compas_tno.__version__" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["compas_tno*"]

# ============================================================================
# replace pytest.ini
# ============================================================================

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests", "src/compas_tno"]
python_files = ["test_*.py", "*_test.py", "test.py"]
addopts = ["-ra", "--strict-markers", "--doctest-glob=*.rst", "--tb=short"]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ALLOW_UNICODE",
    "ALLOW_BYTES",
    "NUMBER",
]

# ============================================================================
# replace bumpversion.cfg
# ============================================================================

[tool.bumpversion]
current_version = "0.2.2"
message = "Bump version to {new_version}"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "src/compas_tno/__init__.py"
search = "{current_version}"
replace = "{new_version}"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "Unreleased"
replace = "[{new_version}] {now:%Y-%m-%d}"

# ============================================================================
# replace setup.cfg
# ============================================================================

[tool.black]
line-length = 179

[tool.ruff]
line-length = 179
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["I001"]
"tests/*" = ["I001"]
"tasks.py" = ["I001"]

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["compas", "compas_tna", "compas_tno"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pycodestyle]
max-doc-length = 179

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"

# ============================================================================
# pydeps
# ============================================================================

[tool.pydeps]
max_bacon = 3
